/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_renderPage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/renderPage */ \"./src/scripts/renderPage.js\");\n/* harmony import */ var _scripts_renderResult__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/renderResult */ \"./src/scripts/renderResult.js\");\n/* harmony import */ var _scripts_renderRecipe__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/renderRecipe */ \"./src/scripts/renderRecipe.js\");\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const main = document.getElementById(\"main\");\n  new _scripts_renderPage__WEBPACK_IMPORTED_MODULE_0__[\"default\"](main);\n  const formFilterSubmission = document.getElementById(\"filterForm\");\n  formFilterSubmission.addEventListener(\"submit\", function (event) {\n    event.preventDefault();\n    const selectedCuisine = document.getElementById(\"cuisineTypeSelector\");\n    const selectedCalories = document.getElementById(\"caloriesSelector\");\n    const selectedProtein = document.getElementById(\"proteinSelector\");\n    const selectedCarbs = document.getElementById(\"carbsSelector\");\n    const selectedFat = document.getElementById(\"fatSelector\");\n    const inputtedFilters = {};\n    inputtedFilters[\"calories\"] = selectedCalories.value;\n    inputtedFilters[\"protein\"] = selectedProtein.value;\n    inputtedFilters[\"carbs\"] = selectedCarbs.value;\n    inputtedFilters[\"fat\"] = selectedFat.value;\n    if (!document.getElementById(\"results\")) {\n      new _scripts_renderResult__WEBPACK_IMPORTED_MODULE_1__[\"default\"](selectedCuisine.value, main, inputtedFilters);\n    } else {\n      const currResults = document.getElementById(\"results\");\n      currResults.remove();\n      new _scripts_renderResult__WEBPACK_IMPORTED_MODULE_1__[\"default\"](selectedCuisine.value, main, inputtedFilters);\n    }\n    ;\n  });\n  document.addEventListener(\"click\", function (event) {\n    const target = event.target;\n    if (target.closest(\"#results\")) {\n      if (target.className === 'resultLabel') {\n        // console.log(target.id);\n        const currResults = document.getElementById(\"results\");\n        currResults.remove();\n        new _scripts_renderRecipe__WEBPACK_IMPORTED_MODULE_2__[\"default\"](target.id);\n      }\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUE4QztBQUNJO0FBQ0E7QUFFbERHLFFBQVEsQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsTUFBTTtFQUNoRCxNQUFNQyxJQUFJLEdBQUdGLFFBQVEsQ0FBQ0csY0FBYyxDQUFDLE1BQU0sQ0FBQztFQUM1QyxJQUFJTiwyREFBVSxDQUFDSyxJQUFJLENBQUM7RUFFcEIsTUFBTUUsb0JBQW9CLEdBQUdKLFFBQVEsQ0FBQ0csY0FBYyxDQUFDLFlBQVksQ0FBQztFQUVsRUMsb0JBQW9CLENBQUNILGdCQUFnQixDQUFDLFFBQVEsRUFBRSxVQUFTSSxLQUFLLEVBQUU7SUFDNURBLEtBQUssQ0FBQ0MsY0FBYyxDQUFDLENBQUM7SUFFdEIsTUFBTUMsZUFBZSxHQUFHUCxRQUFRLENBQUNHLGNBQWMsQ0FBQyxxQkFBcUIsQ0FBQztJQUN0RSxNQUFNSyxnQkFBZ0IsR0FBR1IsUUFBUSxDQUFDRyxjQUFjLENBQUMsa0JBQWtCLENBQUM7SUFDcEUsTUFBTU0sZUFBZSxHQUFHVCxRQUFRLENBQUNHLGNBQWMsQ0FBQyxpQkFBaUIsQ0FBQztJQUNsRSxNQUFNTyxhQUFhLEdBQUdWLFFBQVEsQ0FBQ0csY0FBYyxDQUFDLGVBQWUsQ0FBQztJQUM5RCxNQUFNUSxXQUFXLEdBQUdYLFFBQVEsQ0FBQ0csY0FBYyxDQUFDLGFBQWEsQ0FBQztJQUUxRCxNQUFNUyxlQUFlLEdBQUcsQ0FBQyxDQUFDO0lBRTFCQSxlQUFlLENBQUMsVUFBVSxDQUFDLEdBQUdKLGdCQUFnQixDQUFDSyxLQUFLO0lBQ3BERCxlQUFlLENBQUMsU0FBUyxDQUFDLEdBQUdILGVBQWUsQ0FBQ0ksS0FBSztJQUNsREQsZUFBZSxDQUFDLE9BQU8sQ0FBQyxHQUFHRixhQUFhLENBQUNHLEtBQUs7SUFDOUNELGVBQWUsQ0FBQyxLQUFLLENBQUMsR0FBR0QsV0FBVyxDQUFDRSxLQUFLO0lBRTFDLElBQUksQ0FBQ2IsUUFBUSxDQUFDRyxjQUFjLENBQUMsU0FBUyxDQUFDLEVBQUU7TUFDckMsSUFBSUwsNkRBQVksQ0FBQ1MsZUFBZSxDQUFDTSxLQUFLLEVBQUVYLElBQUksRUFBRVUsZUFBZSxDQUFDO0lBQ2xFLENBQUMsTUFBTTtNQUNILE1BQU1FLFdBQVcsR0FBR2QsUUFBUSxDQUFDRyxjQUFjLENBQUMsU0FBUyxDQUFDO01BQ3REVyxXQUFXLENBQUNDLE1BQU0sQ0FBQyxDQUFDO01BQ3BCLElBQUlqQiw2REFBWSxDQUFDUyxlQUFlLENBQUNNLEtBQUssRUFBRVgsSUFBSSxFQUFFVSxlQUFlLENBQUM7SUFDbEU7SUFBQztFQUNMLENBQUMsQ0FBQztFQUVGWixRQUFRLENBQUNDLGdCQUFnQixDQUFDLE9BQU8sRUFBRSxVQUFVSSxLQUFLLEVBQUU7SUFDaEQsTUFBTVcsTUFBTSxHQUFHWCxLQUFLLENBQUNXLE1BQU07SUFDM0IsSUFBSUEsTUFBTSxDQUFDQyxPQUFPLENBQUMsVUFBVSxDQUFDLEVBQUU7TUFDNUIsSUFBSUQsTUFBTSxDQUFDRSxTQUFTLEtBQUssYUFBYSxFQUFFO1FBQ3BDO1FBQ0EsTUFBTUosV0FBVyxHQUFHZCxRQUFRLENBQUNHLGNBQWMsQ0FBQyxTQUFTLENBQUM7UUFDdERXLFdBQVcsQ0FBQ0MsTUFBTSxDQUFDLENBQUM7UUFDcEIsSUFBSWhCLDZEQUFZLENBQUNpQixNQUFNLENBQUNHLEVBQUUsQ0FBQztNQUMvQjtJQUNKO0VBQ0osQ0FBQyxDQUFDO0FBQ04sQ0FBQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZWF0ZXotcHJvamVjdC8uL3NyYy9pbmRleC5qcz9iNjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZW5kZXJQYWdlIGZyb20gXCIuL3NjcmlwdHMvcmVuZGVyUGFnZVwiO1xuaW1wb3J0IFJlbmRlclJlc3VsdCBmcm9tIFwiLi9zY3JpcHRzL3JlbmRlclJlc3VsdFwiO1xuaW1wb3J0IFJlbmRlclJlY2lwZSBmcm9tIFwiLi9zY3JpcHRzL3JlbmRlclJlY2lwZVwiO1xuXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCAoKSA9PiB7XG4gICAgY29uc3QgbWFpbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFpblwiKTtcbiAgICBuZXcgUmVuZGVyUGFnZShtYWluKTtcblxuICAgIGNvbnN0IGZvcm1GaWx0ZXJTdWJtaXNzaW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmaWx0ZXJGb3JtXCIpXG5cbiAgICBmb3JtRmlsdGVyU3VibWlzc2lvbi5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgY29uc3Qgc2VsZWN0ZWRDdWlzaW5lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjdWlzaW5lVHlwZVNlbGVjdG9yXCIpO1xuICAgICAgICBjb25zdCBzZWxlY3RlZENhbG9yaWVzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYWxvcmllc1NlbGVjdG9yXCIpO1xuICAgICAgICBjb25zdCBzZWxlY3RlZFByb3RlaW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInByb3RlaW5TZWxlY3RvclwiKTtcbiAgICAgICAgY29uc3Qgc2VsZWN0ZWRDYXJicyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FyYnNTZWxlY3RvclwiKTtcbiAgICAgICAgY29uc3Qgc2VsZWN0ZWRGYXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZhdFNlbGVjdG9yXCIpO1xuXG4gICAgICAgIGNvbnN0IGlucHV0dGVkRmlsdGVycyA9IHt9O1xuXG4gICAgICAgIGlucHV0dGVkRmlsdGVyc1tcImNhbG9yaWVzXCJdID0gc2VsZWN0ZWRDYWxvcmllcy52YWx1ZTtcbiAgICAgICAgaW5wdXR0ZWRGaWx0ZXJzW1wicHJvdGVpblwiXSA9IHNlbGVjdGVkUHJvdGVpbi52YWx1ZTtcbiAgICAgICAgaW5wdXR0ZWRGaWx0ZXJzW1wiY2FyYnNcIl0gPSBzZWxlY3RlZENhcmJzLnZhbHVlO1xuICAgICAgICBpbnB1dHRlZEZpbHRlcnNbXCJmYXRcIl0gPSBzZWxlY3RlZEZhdC52YWx1ZTtcblxuICAgICAgICBpZiAoIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicmVzdWx0c1wiKSkge1xuICAgICAgICAgICAgbmV3IFJlbmRlclJlc3VsdChzZWxlY3RlZEN1aXNpbmUudmFsdWUsIG1haW4sIGlucHV0dGVkRmlsdGVycyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBjdXJyUmVzdWx0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicmVzdWx0c1wiKTtcbiAgICAgICAgICAgIGN1cnJSZXN1bHRzLnJlbW92ZSgpO1xuICAgICAgICAgICAgbmV3IFJlbmRlclJlc3VsdChzZWxlY3RlZEN1aXNpbmUudmFsdWUsIG1haW4sIGlucHV0dGVkRmlsdGVycyk7XG4gICAgICAgIH07XG4gICAgfSk7XG5cbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldDtcbiAgICAgICAgaWYgKHRhcmdldC5jbG9zZXN0KFwiI3Jlc3VsdHNcIikpIHtcbiAgICAgICAgICAgIGlmICh0YXJnZXQuY2xhc3NOYW1lID09PSAncmVzdWx0TGFiZWwnKSB7XG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2codGFyZ2V0LmlkKTtcbiAgICAgICAgICAgICAgICBjb25zdCBjdXJyUmVzdWx0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicmVzdWx0c1wiKTtcbiAgICAgICAgICAgICAgICBjdXJyUmVzdWx0cy5yZW1vdmUoKTtcbiAgICAgICAgICAgICAgICBuZXcgUmVuZGVyUmVjaXBlKHRhcmdldC5pZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcbn0pO1xuIl0sIm5hbWVzIjpbIlJlbmRlclBhZ2UiLCJSZW5kZXJSZXN1bHQiLCJSZW5kZXJSZWNpcGUiLCJkb2N1bWVudCIsImFkZEV2ZW50TGlzdGVuZXIiLCJtYWluIiwiZ2V0RWxlbWVudEJ5SWQiLCJmb3JtRmlsdGVyU3VibWlzc2lvbiIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJzZWxlY3RlZEN1aXNpbmUiLCJzZWxlY3RlZENhbG9yaWVzIiwic2VsZWN0ZWRQcm90ZWluIiwic2VsZWN0ZWRDYXJicyIsInNlbGVjdGVkRmF0IiwiaW5wdXR0ZWRGaWx0ZXJzIiwidmFsdWUiLCJjdXJyUmVzdWx0cyIsInJlbW92ZSIsInRhcmdldCIsImNsb3Nlc3QiLCJjbGFzc05hbWUiLCJpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/pieGraph.js":
/*!*********************************!*\
  !*** ./src/scripts/pieGraph.js ***!
  \*********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass PieGraph {\n  constructor(protein, carbs, fat) {\n    this.data = [{\n      label: \"Protein\",\n      value: protein\n    }, {\n      label: \"Carbs\",\n      value: carbs\n    }, {\n      label: \"Fat\",\n      value: fat\n    }];\n    this.li = li;\n  }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (PieGraph);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2NyaXB0cy9waWVHcmFwaC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsTUFBTUEsUUFBUSxDQUFDO0VBQ1hDLFdBQVdBLENBQUNDLE9BQU8sRUFBRUMsS0FBSyxFQUFFQyxHQUFHLEVBQUU7SUFDN0IsSUFBSSxDQUFDQyxJQUFJLEdBQUcsQ0FDUjtNQUFDQyxLQUFLLEVBQUUsU0FBUztNQUFFQyxLQUFLLEVBQUVMO0lBQVEsQ0FBQyxFQUNuQztNQUFDSSxLQUFLLEVBQUUsT0FBTztNQUFFQyxLQUFLLEVBQUVKO0lBQU0sQ0FBQyxFQUMvQjtNQUFDRyxLQUFLLEVBQUUsS0FBSztNQUFFQyxLQUFLLEVBQUVIO0lBQUcsQ0FBQyxDQUM3QjtJQUVELElBQUksQ0FBQ0ksRUFBRSxHQUFHQSxFQUFFO0VBQ2hCO0FBS0o7QUFFQSwrREFBZVIsUUFBUSIsInNvdXJjZXMiOlsid2VicGFjazovL2VhdGV6LXByb2plY3QvLi9zcmMvc2NyaXB0cy9waWVHcmFwaC5qcz8xZmRkIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFBpZUdyYXBoIHtcbiAgICBjb25zdHJ1Y3Rvcihwcm90ZWluLCBjYXJicywgZmF0KSB7XG4gICAgICAgIHRoaXMuZGF0YSA9IFtcbiAgICAgICAgICAgIHtsYWJlbDogXCJQcm90ZWluXCIsIHZhbHVlOiBwcm90ZWluIH0sXG4gICAgICAgICAgICB7bGFiZWw6IFwiQ2FyYnNcIiwgdmFsdWU6IGNhcmJzIH0sXG4gICAgICAgICAgICB7bGFiZWw6IFwiRmF0XCIsIHZhbHVlOiBmYXR9XG4gICAgICAgIF07XG5cbiAgICAgICAgdGhpcy5saSA9IGxpO1xuICAgIH1cblxuXG5cblxufVxuXG5leHBvcnQgZGVmYXVsdCBQaWVHcmFwaDsiXSwibmFtZXMiOlsiUGllR3JhcGgiLCJjb25zdHJ1Y3RvciIsInByb3RlaW4iLCJjYXJicyIsImZhdCIsImRhdGEiLCJsYWJlbCIsInZhbHVlIiwibGkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/pieGraph.js\n");

/***/ }),

/***/ "./src/scripts/renderPage.js":
/*!***********************************!*\
  !*** ./src/scripts/renderPage.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass RenderPage {\n  constructor(ele) {\n    this.main = ele;\n    this.createHeader();\n    this.createSidebar(ele);\n    this.createFooter();\n    this.main.addEventListener('click', this.handleClick.bind(this));\n  }\n  handleClick() {\n    // this.ele.children[0].innerText = 'Ouch!';\n  }\n  createHeader() {\n    const header = document.createElement(\"header\");\n    const logo = document.createElement(\"img\");\n    logo.src = \"src/styles/EatEZLogo.jpg\";\n    header.appendChild(logo);\n    document.body.prepend(header);\n  }\n  createFooter() {\n    const footer = document.createElement(\"footer\");\n    footer.innerHTML = \"<p>2023 All Rights Reserved</p>\";\n    document.body.appendChild(footer);\n  }\n  createSidebar(ele) {\n    //creation of sidebar container\n    const sidebar = document.createElement(\"div\");\n    sidebar.id = \"sidebar\";\n    ele.appendChild(sidebar);\n\n    //creation of paragraph description in sidebar\n    const description = document.createElement(\"p\");\n    description.textContent = \"Paragraph Description\";\n    sidebar.appendChild(description);\n    description.style.marginBottom = \"10px\";\n\n    //creation of a form to contain the filters\n    const form = document.createElement(\"form\");\n    form.id = \"filterForm\";\n    sidebar.appendChild(form);\n\n    //cuisine drop down in side nav\n    const cuisine = document.createElement(\"select\");\n    cuisine.id = \"cuisineTypeSelector\";\n\n    //creating the default cuising button\n    const pleaseSelectCuisine = document.createElement(\"option\");\n    pleaseSelectCuisine.value = \"\";\n    pleaseSelectCuisine.text = \"Please select a Cuisine\";\n    pleaseSelectCuisine.disabled = true;\n    pleaseSelectCuisine.selected = true;\n    cuisine.appendChild(pleaseSelectCuisine);\n\n    //adding the cuisines to the dropdown\n    let cuisines = ['American', 'Asian', 'British', 'Caribbean', 'Central Europe', 'Chinese', 'Eastern Europe', 'French', 'Greek', 'Indian', 'Italian', 'Japanese', 'Korean', 'Kosher', 'Mediterranean', 'Mexican', 'Middle Eastern', 'Nordic', 'South American', 'South East Asian', 'World'];\n    cuisines.forEach(typeOfCuisine => {\n      const lowerCaseCuisine = typeOfCuisine.toLowerCase();\n      const option = document.createElement(\"option\");\n      option.value = lowerCaseCuisine;\n      option.text = typeOfCuisine;\n      cuisine.appendChild(option);\n    });\n    form.appendChild(cuisine);\n    cuisine.style.marginBottom = \"10px\";\n\n    //creation of calories selector\n    const calories = document.createElement(\"select\");\n    calories.id = \"caloriesSelector\";\n\n    //creating the default calorie selector\n    const pleaseSelectCalories = document.createElement(\"option\");\n    pleaseSelectCalories.value = \"\";\n    pleaseSelectCalories.text = \"Please Select Max Calories Required\";\n    pleaseSelectCalories.disabled = true;\n    pleaseSelectCalories.selected = true;\n    calories.appendChild(pleaseSelectCalories);\n\n    //calories range\n    for (let i = 500; i <= 3000; i += 500) {\n      let option = document.createElement(\"option\");\n      option.value = `${i}`;\n      option.text = `${i} calories or less`;\n      calories.appendChild(option);\n    }\n    form.appendChild(calories);\n    calories.style.marginBottom = \"10px\";\n\n    //creation of total daily protein requirement\n    const protein = document.createElement(\"select\");\n    protein.id = \"proteinSelector\";\n    const pleaseSelectProtein = document.createElement(\"option\");\n    pleaseSelectProtein.value = \"\";\n    pleaseSelectProtein.text = \"Please Select Minimum Protein in Grams\";\n    pleaseSelectProtein.disabled = true;\n    pleaseSelectProtein.selected = true;\n    protein.appendChild(pleaseSelectProtein);\n    for (let i = 5; i <= 105; i += 10) {\n      let option = document.createElement(\"option\");\n      option.value = `${i}`;\n      option.text = `${i} grams or more`;\n      protein.appendChild(option);\n    }\n    ;\n    form.appendChild(protein);\n    protein.style.marginBottom = \"10px\";\n\n    //creation of total daily carb requirement\n    const carbs = document.createElement(\"select\");\n    carbs.id = \"carbsSelector\";\n    const pleaseSelectCarbs = document.createElement(\"option\");\n    pleaseSelectCarbs.value = \"\";\n    pleaseSelectCarbs.text = \"Please Select Minimum Carbs in Grams\";\n    pleaseSelectCarbs.disabled = true;\n    pleaseSelectCarbs.selected = true;\n    carbs.appendChild(pleaseSelectCarbs);\n    for (let i = 5; i <= 105; i += 10) {\n      let option = document.createElement(\"option\");\n      option.value = `${i}`;\n      option.text = `${i} grams or more`;\n      carbs.appendChild(option);\n    }\n    ;\n    form.appendChild(carbs);\n    carbs.style.marginBottom = \"10px\";\n\n    //creation of total daily fat requirement\n    const fat = document.createElement(\"select\");\n    fat.id = \"fatSelector\";\n    const pleaseSelectFat = document.createElement(\"option\");\n    pleaseSelectFat.value = \"\";\n    pleaseSelectFat.text = \"Please Select Minimum Fat in Grams\";\n    pleaseSelectFat.disabled = true;\n    pleaseSelectFat.selected = true;\n    fat.appendChild(pleaseSelectFat);\n    for (let i = 5; i <= 105; i += 10) {\n      let option = document.createElement(\"option\");\n      option.value = `${i}`;\n      option.text = `${i} grams or more`;\n      fat.appendChild(option);\n    }\n    ;\n    form.appendChild(fat);\n    fat.style.marginBottom = \"10px\";\n    const searchButton = document.createElement(\"input\");\n    searchButton.type = \"submit\";\n    searchButton.value = \"Search\";\n    form.appendChild(searchButton);\n  }\n}\n;\n/* harmony default export */ __webpack_exports__[\"default\"] = (RenderPage);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/renderPage.js\n");

/***/ }),

/***/ "./src/scripts/renderRecipe.js":
/*!*************************************!*\
  !*** ./src/scripts/renderRecipe.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _pieGraph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pieGraph */ \"./src/scripts/pieGraph.js\");\n\nclass RenderRecipe {\n  constructor(recipeLabel) {\n    this.getData(recipeLabel).then(data => {\n      console.log(data);\n      const hits = data.hits;\n      this.renderData(hits, main, recipeLabel);\n    }).catch(error => {\n      console.log(\"Sorry, there was an error getting your data\");\n    });\n  }\n  async getData(recipeLabel) {\n    let appId = \"25aad07a\";\n    let appKey = \"095c96548ed9957ef5de2298cd228fc4\";\n    let url = `https://api.edamam.com/search?q=${recipeLabel}&app_id=${appId}&app_key=${appKey}`;\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(\"Sorry, there was an error with the network\");\n    }\n    const data = await response.json();\n    return data;\n  }\n  renderData(hits, main, recipeLabel) {\n    const results = document.createElement(\"div\");\n    results.id = \"recipe\";\n    main.appendChild(results);\n    hits.forEach(hit => {\n      //isolate the recipe for each hit\n      const recipe = hit.recipe;\n      const proteinQty = Math.floor(recipe.totalNutrients.PROCNT.quantity);\n      const proteinUnit = recipe.totalNutrients.PROCNT.unit;\n      const carbsQty = Math.floor(recipe.totalNutrients.CHOCDF.quantity);\n      const carbsUnit = recipe.totalNutrients.CHOCDF.unit;\n      const fatQty = Math.floor(recipe.totalNutrients.FAT.quantity);\n      const fatUnit = recipe.totalNutrients.FAT.unit;\n      if (recipe.label === recipeLabel) {\n        //add the label\n        const label = document.createElement(\"li\");\n        label.innerHTML = `${recipe.label}`;\n        results.appendChild(label);\n\n        // //render small image\n        // const image = document.createElement(\"img\");\n        // image.src = `${recipe.image}`;\n        // item.appendChild(image);\n\n        //add the calories\n        const calories = document.createElement(\"li\");\n        calories.innerHTML = `Calories: ${recipe.calories}`;\n        results.appendChild(calories);\n\n        //add the ingredients li to add ingredients underneath\n        const ingredients = document.createElement(\"li\");\n        ingredients.innerHTML = 'Ingredients: ';\n        results.appendChild(ingredients);\n\n        //add the ingredients ul\n        const ingredientItems = document.createElement(\"ul\");\n        ingredients.appendChild(ingredientItems);\n        results.appendChild(ingredients);\n\n        //add each ingredient\n        recipe.ingredients.forEach(ingredient => {\n          const recipeItem = document.createElement(\"li\");\n          recipeItem.innerHTML = ingredient.text;\n          ingredientItems.appendChild(recipeItem);\n        });\n\n        //creating a ul pie chart container\n        const pieChartContainerId = `pie-chart-container`;\n        const pieChartContainer = document.createElement(\"div\");\n        pieChartContainer.id = pieChartContainerId;\n        results.appendChild(pieChartContainer);\n        var data = [{\n          nutrient: 'Protein',\n          value: proteinQty\n        }, {\n          nutrient: 'Fat',\n          value: fatQty\n        }, {\n          nutrient: 'Carbs',\n          value: carbsQty\n        }];\n        var width = 100;\n        var height = 100;\n        var radius = Math.min(width, height) / 2;\n        var innerRadius = 10; // Adjust this to control the size of the hole.\n\n        var svg = d3.select(`#${pieChartContainerId}`).append('svg').attr('width', width).attr('height', height).append('g').attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')');\n        var pie = d3.pie().value(function (d) {\n          return d.value;\n        });\n        var arc = d3.arc().innerRadius(innerRadius) // Inner radius to create the hole\n        .outerRadius(radius);\n        var arcs = svg.selectAll('arc').data(pie(data)).enter().append('g');\n        arcs.append('path').attr('d', arc).attr('fill', function (d) {\n          if (d.data.nutrient === 'Protein') {\n            return 'blue';\n          } else if (d.data.nutrient === 'Fat') {\n            return 'green';\n          } else {\n            return 'red';\n          }\n        });\n        arcs.append('text').attr('transform', function (d) {\n          return 'translate(' + arc.centroid(d) + ')';\n        }).attr('text-anchor', 'middle').text(function (d) {\n          return d.data.nutrient;\n        });\n      }\n      ;\n    });\n  }\n}\n;\n/* harmony default export */ __webpack_exports__[\"default\"] = (RenderRecipe);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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aEJNLElBQUksQ0FBQ04sTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUNkQyxJQUFJLENBQUMsR0FBRyxFQUFFRyxHQUFHLENBQUMsQ0FDZEgsSUFBSSxDQUFDLE1BQU0sRUFBRSxVQUFVRSxDQUFDLEVBQUU7VUFDdkIsSUFBSUEsQ0FBQyxDQUFDN0QsSUFBSSxDQUFDZ0QsUUFBUSxLQUFLLFNBQVMsRUFBRTtZQUMvQixPQUFPLE1BQU07VUFDakIsQ0FBQyxNQUFNLElBQUlhLENBQUMsQ0FBQzdELElBQUksQ0FBQ2dELFFBQVEsS0FBSyxLQUFLLEVBQUU7WUFDbEMsT0FBTyxPQUFPO1VBQ2xCLENBQUMsTUFBTTtZQUNILE9BQU8sS0FBSztVQUNoQjtRQUNKLENBQUMsQ0FBQztRQUVOZ0IsSUFBSSxDQUFDTixNQUFNLENBQUMsTUFBTSxDQUFDLENBQ2RDLElBQUksQ0FBQyxXQUFXLEVBQUUsVUFBVUUsQ0FBQyxFQUFFO1VBQzVCLE9BQU8sWUFBWSxHQUFHQyxHQUFHLENBQUNLLFFBQVEsQ0FBQ04sQ0FBQyxDQUFDLEdBQUcsR0FBRztRQUMvQyxDQUFDLENBQUMsQ0FDREYsSUFBSSxDQUFDLGFBQWEsRUFBRSxRQUFRLENBQUMsQ0FDN0JkLElBQUksQ0FBQyxVQUFVZ0IsQ0FBQyxFQUFFO1VBQ2YsT0FBT0EsQ0FBQyxDQUFDN0QsSUFBSSxDQUFDZ0QsUUFBUTtRQUMxQixDQUFDLENBQUM7TUFDVjtNQUFDO0lBQ0wsQ0FBQyxDQUFDO0VBQ047QUFDSjtBQUFDO0FBRUQsK0RBQWVyRCxZQUFZIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZWF0ZXotcHJvamVjdC8uL3NyYy9zY3JpcHRzL3JlbmRlclJlY2lwZS5qcz85MTFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQaWVHcmFwaCBmcm9tIFwiLi9waWVHcmFwaFwiO1xuXG5jbGFzcyBSZW5kZXJSZWNpcGUge1xuICAgIGNvbnN0cnVjdG9yKHJlY2lwZUxhYmVsKSB7XG4gICAgICAgIHRoaXMuZ2V0RGF0YShyZWNpcGVMYWJlbClcbiAgICAgICAgICAgIC50aGVuKGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpXG4gICAgICAgICAgICAgICAgY29uc3QgaGl0cyA9IGRhdGEuaGl0cztcbiAgICAgICAgICAgICAgICB0aGlzLnJlbmRlckRhdGEoaGl0cywgbWFpbiwgcmVjaXBlTGFiZWwpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaChlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJTb3JyeSwgdGhlcmUgd2FzIGFuIGVycm9yIGdldHRpbmcgeW91ciBkYXRhXCIpO1xuICAgICAgICAgICAgfSlcbiAgICB9O1xuXG4gICAgYXN5bmMgZ2V0RGF0YShyZWNpcGVMYWJlbCkge1xuICAgICAgICBsZXQgYXBwSWQgPSBcIjI1YWFkMDdhXCI7XG4gICAgICAgIGxldCBhcHBLZXkgPSBcIjA5NWM5NjU0OGVkOTk1N2VmNWRlMjI5OGNkMjI4ZmM0XCI7XG4gICAgICAgIGxldCB1cmwgPSBgaHR0cHM6Ly9hcGkuZWRhbWFtLmNvbS9zZWFyY2g/cT0ke3JlY2lwZUxhYmVsfSZhcHBfaWQ9JHthcHBJZH0mYXBwX2tleT0ke2FwcEtleX1gO1xuXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2godXJsKTtcblxuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJTb3JyeSwgdGhlcmUgd2FzIGFuIGVycm9yIHdpdGggdGhlIG5ldHdvcmtcIik7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuXG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgIH07XG4gICAgXG4gICAgcmVuZGVyRGF0YShoaXRzLCBtYWluLCByZWNpcGVMYWJlbCkge1xuICAgICAgICBjb25zdCByZXN1bHRzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgcmVzdWx0cy5pZCA9IFwicmVjaXBlXCI7XG4gICAgICAgIG1haW4uYXBwZW5kQ2hpbGQocmVzdWx0cyk7XG5cbiAgICAgICAgaGl0cy5mb3JFYWNoKGhpdCA9PiB7XG4gICAgICAgICAgICAvL2lzb2xhdGUgdGhlIHJlY2lwZSBmb3IgZWFjaCBoaXRcbiAgICAgICAgICAgIGNvbnN0IHJlY2lwZSA9IGhpdC5yZWNpcGU7XG4gICAgICAgICAgICBjb25zdCBwcm90ZWluUXR5ID0gTWF0aC5mbG9vcihyZWNpcGUudG90YWxOdXRyaWVudHMuUFJPQ05ULnF1YW50aXR5KTtcbiAgICAgICAgICAgIGNvbnN0IHByb3RlaW5Vbml0ID0gcmVjaXBlLnRvdGFsTnV0cmllbnRzLlBST0NOVC51bml0O1xuICAgICAgICAgICAgY29uc3QgY2FyYnNRdHkgPSBNYXRoLmZsb29yKHJlY2lwZS50b3RhbE51dHJpZW50cy5DSE9DREYucXVhbnRpdHkpO1xuICAgICAgICAgICAgY29uc3QgY2FyYnNVbml0ID0gcmVjaXBlLnRvdGFsTnV0cmllbnRzLkNIT0NERi51bml0O1xuICAgICAgICAgICAgY29uc3QgZmF0UXR5ID0gTWF0aC5mbG9vcihyZWNpcGUudG90YWxOdXRyaWVudHMuRkFULnF1YW50aXR5KTtcbiAgICAgICAgICAgIGNvbnN0IGZhdFVuaXQgPSByZWNpcGUudG90YWxOdXRyaWVudHMuRkFULnVuaXQ7XG5cbiAgICAgICAgICAgIGlmIChyZWNpcGUubGFiZWwgPT09IHJlY2lwZUxhYmVsKSB7XG4gICAgICAgICAgICAgICAgLy9hZGQgdGhlIGxhYmVsXG4gICAgICAgICAgICAgICAgY29uc3QgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIik7XG4gICAgICAgICAgICAgICAgbGFiZWwuaW5uZXJIVE1MID0gYCR7cmVjaXBlLmxhYmVsfWA7XG4gICAgICAgICAgICAgICAgcmVzdWx0cy5hcHBlbmRDaGlsZChsYWJlbCk7XG5cbiAgICAgICAgICAgICAgICAvLyAvL3JlbmRlciBzbWFsbCBpbWFnZVxuICAgICAgICAgICAgICAgIC8vIGNvbnN0IGltYWdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImltZ1wiKTtcbiAgICAgICAgICAgICAgICAvLyBpbWFnZS5zcmMgPSBgJHtyZWNpcGUuaW1hZ2V9YDtcbiAgICAgICAgICAgICAgICAvLyBpdGVtLmFwcGVuZENoaWxkKGltYWdlKTtcblxuICAgICAgICAgICAgICAgIC8vYWRkIHRoZSBjYWxvcmllc1xuICAgICAgICAgICAgICAgIGNvbnN0IGNhbG9yaWVzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpO1xuICAgICAgICAgICAgICAgIGNhbG9yaWVzLmlubmVySFRNTCA9IGBDYWxvcmllczogJHtyZWNpcGUuY2Fsb3JpZXN9YDtcbiAgICAgICAgICAgICAgICByZXN1bHRzLmFwcGVuZENoaWxkKGNhbG9yaWVzKTtcblxuICAgICAgICAgICAgICAgIC8vYWRkIHRoZSBpbmdyZWRpZW50cyBsaSB0byBhZGQgaW5ncmVkaWVudHMgdW5kZXJuZWF0aFxuICAgICAgICAgICAgICAgIGNvbnN0IGluZ3JlZGllbnRzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpO1xuICAgICAgICAgICAgICAgIGluZ3JlZGllbnRzLmlubmVySFRNTCA9ICdJbmdyZWRpZW50czogJztcbiAgICAgICAgICAgICAgICByZXN1bHRzLmFwcGVuZENoaWxkKGluZ3JlZGllbnRzKTtcblxuICAgICAgICAgICAgICAgIC8vYWRkIHRoZSBpbmdyZWRpZW50cyB1bFxuICAgICAgICAgICAgICAgIGNvbnN0IGluZ3JlZGllbnRJdGVtcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiKTtcbiAgICAgICAgICAgICAgICBpbmdyZWRpZW50cy5hcHBlbmRDaGlsZChpbmdyZWRpZW50SXRlbXMpO1xuICAgICAgICAgICAgICAgIHJlc3VsdHMuYXBwZW5kQ2hpbGQoaW5ncmVkaWVudHMpO1xuXG4gICAgICAgICAgICAgICAgLy9hZGQgZWFjaCBpbmdyZWRpZW50XG4gICAgICAgICAgICAgICAgcmVjaXBlLmluZ3JlZGllbnRzLmZvckVhY2goaW5ncmVkaWVudCA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlY2lwZUl0ZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIik7XG4gICAgICAgICAgICAgICAgICAgIHJlY2lwZUl0ZW0uaW5uZXJIVE1MID0gaW5ncmVkaWVudC50ZXh0O1xuICAgICAgICAgICAgICAgICAgICBpbmdyZWRpZW50SXRlbXMuYXBwZW5kQ2hpbGQocmVjaXBlSXRlbSk7XG4gICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAvL2NyZWF0aW5nIGEgdWwgcGllIGNoYXJ0IGNvbnRhaW5lclxuICAgICAgICAgICAgICAgIGNvbnN0IHBpZUNoYXJ0Q29udGFpbmVySWQgPSBgcGllLWNoYXJ0LWNvbnRhaW5lcmA7XG4gICAgICAgICAgICAgICAgY29uc3QgcGllQ2hhcnRDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICAgICAgICAgIHBpZUNoYXJ0Q29udGFpbmVyLmlkID0gcGllQ2hhcnRDb250YWluZXJJZDtcbiAgICAgICAgICAgICAgICByZXN1bHRzLmFwcGVuZENoaWxkKHBpZUNoYXJ0Q29udGFpbmVyKTtcblxuICAgICAgICAgICAgICAgIHZhciBkYXRhID0gW1xuICAgICAgICAgICAgICAgICAgICB7IG51dHJpZW50OiAnUHJvdGVpbicsIHZhbHVlOiBwcm90ZWluUXR5IH0sXG4gICAgICAgICAgICAgICAgICAgIHsgbnV0cmllbnQ6ICdGYXQnLCB2YWx1ZTogZmF0UXR5IH0sXG4gICAgICAgICAgICAgICAgICAgIHsgbnV0cmllbnQ6ICdDYXJicycsIHZhbHVlOiBjYXJic1F0eSB9LFxuICAgICAgICAgICAgICAgIF07XG5cbiAgICAgICAgICAgICAgICB2YXIgd2lkdGggPSAxMDA7XG4gICAgICAgICAgICAgICAgdmFyIGhlaWdodCA9IDEwMDtcbiAgICAgICAgICAgICAgICB2YXIgcmFkaXVzID0gTWF0aC5taW4od2lkdGgsIGhlaWdodCkgLyAyO1xuICAgICAgICAgICAgICAgIHZhciBpbm5lclJhZGl1cyA9IDEwOyAvLyBBZGp1c3QgdGhpcyB0byBjb250cm9sIHRoZSBzaXplIG9mIHRoZSBob2xlLlxuXG4gICAgICAgICAgICAgICAgdmFyIHN2ZyA9IGQzLnNlbGVjdChgIyR7cGllQ2hhcnRDb250YWluZXJJZH1gKVxuICAgICAgICAgICAgICAgICAgICAuYXBwZW5kKCdzdmcnKVxuICAgICAgICAgICAgICAgICAgICAuYXR0cignd2lkdGgnLCB3aWR0aClcbiAgICAgICAgICAgICAgICAgICAgLmF0dHIoJ2hlaWdodCcsIGhlaWdodClcbiAgICAgICAgICAgICAgICAgICAgLmFwcGVuZCgnZycpXG4gICAgICAgICAgICAgICAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKCcgKyB3aWR0aCAvIDIgKyAnLCcgKyBoZWlnaHQgLyAyICsgJyknKTtcblxuICAgICAgICAgICAgICAgIHZhciBwaWUgPSBkMy5waWUoKVxuICAgICAgICAgICAgICAgICAgICAudmFsdWUoZnVuY3Rpb24gKGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBkLnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIHZhciBhcmMgPSBkMy5hcmMoKVxuICAgICAgICAgICAgICAgICAgICAuaW5uZXJSYWRpdXMoaW5uZXJSYWRpdXMpIC8vIElubmVyIHJhZGl1cyB0byBjcmVhdGUgdGhlIGhvbGVcbiAgICAgICAgICAgICAgICAgICAgLm91dGVyUmFkaXVzKHJhZGl1cyk7XG5cbiAgICAgICAgICAgICAgICB2YXIgYXJjcyA9IHN2Zy5zZWxlY3RBbGwoJ2FyYycpXG4gICAgICAgICAgICAgICAgICAgIC5kYXRhKHBpZShkYXRhKSlcbiAgICAgICAgICAgICAgICAgICAgLmVudGVyKClcbiAgICAgICAgICAgICAgICAgICAgLmFwcGVuZCgnZycpO1xuXG4gICAgICAgICAgICAgICAgYXJjcy5hcHBlbmQoJ3BhdGgnKVxuICAgICAgICAgICAgICAgICAgICAuYXR0cignZCcsIGFyYylcbiAgICAgICAgICAgICAgICAgICAgLmF0dHIoJ2ZpbGwnLCBmdW5jdGlvbiAoZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGQuZGF0YS5udXRyaWVudCA9PT0gJ1Byb3RlaW4nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdibHVlJztcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoZC5kYXRhLm51dHJpZW50ID09PSAnRmF0Jykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnZ3JlZW4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJ3JlZCc7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgICAgYXJjcy5hcHBlbmQoJ3RleHQnKVxuICAgICAgICAgICAgICAgICAgICAuYXR0cigndHJhbnNmb3JtJywgZnVuY3Rpb24gKGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAndHJhbnNsYXRlKCcgKyBhcmMuY2VudHJvaWQoZCkgKyAnKSc7XG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIC5hdHRyKCd0ZXh0LWFuY2hvcicsICdtaWRkbGUnKVxuICAgICAgICAgICAgICAgICAgICAudGV4dChmdW5jdGlvbiAoZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGQuZGF0YS5udXRyaWVudDtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUmVuZGVyUmVjaXBlIl0sIm5hbWVzIjpbIlBpZUdyYXBoIiwiUmVuZGVyUmVjaXBlIiwiY29uc3RydWN0b3IiLCJyZWNpcGVMYWJlbCIsImdldERhdGEiLCJ0aGVuIiwiZGF0YSIsImNvbnNvbGUiLCJsb2ciLCJoaXRzIiwicmVuZGVyRGF0YSIsIm1haW4iLCJjYXRjaCIsImVycm9yIiwiYXBwSWQiLCJhcHBLZXkiLCJ1cmwiLCJyZXNwb25zZSIsImZldGNoIiwib2siLCJFcnJvciIsImpzb24iLCJyZXN1bHRzIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiaWQiLCJhcHBlbmRDaGlsZCIsImZvckVhY2giLCJoaXQiLCJyZWNpcGUiLCJwcm90ZWluUXR5IiwiTWF0aCIsImZsb29yIiwidG90YWxOdXRyaWVudHMiLCJQUk9DTlQiLCJxdWFudGl0eSIsInByb3RlaW5Vbml0IiwidW5pdCIsImNhcmJzUXR5IiwiQ0hPQ0RGIiwiY2FyYnNVbml0IiwiZmF0UXR5IiwiRkFUIiwiZmF0VW5pdCIsImxhYmVsIiwiaW5uZXJIVE1MIiwiY2Fsb3JpZXMiLCJpbmdyZWRpZW50cyIsImluZ3JlZGllbnRJdGVtcyIsImluZ3JlZGllbnQiLCJyZWNpcGVJdGVtIiwidGV4dCIsInBpZUNoYXJ0Q29udGFpbmVySWQiLCJwaWVDaGFydENvbnRhaW5lciIsIm51dHJpZW50IiwidmFsdWUiLCJ3aWR0aCIsImhlaWdodCIsInJhZGl1cyIsIm1pbiIsImlubmVyUmFkaXVzIiwic3ZnIiwiZDMiLCJzZWxlY3QiLCJhcHBlbmQiLCJhdHRyIiwicGllIiwiZCIsImFyYyIsIm91dGVyUmFkaXVzIiwiYXJjcyIsInNlbGVjdEFsbCIsImVudGVyIiwiY2VudHJvaWQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/renderRecipe.js\n");

/***/ }),

/***/ "./src/scripts/renderResult.js":
/*!*************************************!*\
  !*** ./src/scripts/renderResult.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _pieGraph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pieGraph */ \"./src/scripts/pieGraph.js\");\n\nclass RenderResult {\n  constructor(selectedOption, main, inputtedFilters) {\n    this.getData(selectedOption).then(data => {\n      const hits = data.hits;\n      this.renderData(hits, main, inputtedFilters);\n    }).catch(error => {\n      console.log(\"Sorry, there was an error getting your data\");\n    });\n  }\n  async getData(selectedOption) {\n    let appId = \"25aad07a\";\n    let appKey = \"095c96548ed9957ef5de2298cd228fc4\";\n    let url = `https://api.edamam.com/api/recipes/v2?app_id=${appId}&app_key=${appKey}&cuisineType=${selectedOption}&type=public`;\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(\"Sorry, there was an error with the network\");\n    }\n    const data = await response.json();\n    return data;\n  }\n  renderData(hits, main, inputtedFilters) {\n    const results = document.createElement(\"div\");\n    results.id = \"results\";\n    main.appendChild(results);\n    let pieChartCounter = 1;\n    if (inputtedFilters[\"calories\"] === '') {\n      inputtedFilters[\"calories\"] = 500;\n    }\n    ;\n    if (inputtedFilters[\"protein\"] === '') {\n      inputtedFilters[\"protein\"] = 5;\n    }\n    ;\n    if (inputtedFilters[\"carbs\"] === '') {\n      inputtedFilters[\"carbs\"] = 5;\n    }\n    ;\n    if (inputtedFilters[\"fat\"] === '') {\n      inputtedFilters[\"fat\"] = 5;\n    }\n    ;\n    hits.forEach(hit => {\n      //isolate item\n      const recipe = hit.recipe;\n      const item = document.createElement(\"ul\");\n      item.id = \"item\";\n      const proteinQty = Math.floor(recipe.totalNutrients.PROCNT.quantity);\n      const proteinUnit = recipe.totalNutrients.PROCNT.unit;\n      const carbsQty = Math.floor(recipe.totalNutrients.CHOCDF.quantity);\n      const carbsUnit = recipe.totalNutrients.CHOCDF.unit;\n      const fatQty = Math.floor(recipe.totalNutrients.FAT.quantity);\n      const fatUnit = recipe.totalNutrients.FAT.unit;\n      if (recipe.calories <= inputtedFilters[\"calories\"] && proteinQty >= inputtedFilters[\"protein\"] && carbsQty >= inputtedFilters[\"carbs\"] && fatQty >= inputtedFilters[\"fat\"]) {\n        //render recipe label\n        const label = document.createElement(\"li\");\n        label.innerHTML = `${recipe.label}`;\n        label.className = 'resultLabel';\n        label.id = `${recipe.label}`;\n        item.appendChild(label);\n\n        //render small image\n        const image = document.createElement(\"img\");\n        image.src = `${recipe.images.SMALL.url}`;\n        item.appendChild(image);\n\n        //render calories for recipe\n        const calories = document.createElement(\"li\");\n        calories.innerHTML = `Calories: ${Math.floor(recipe.calories)}`;\n        item.appendChild(calories);\n\n        //creating an li for Nutrition Facts\n        const nutrition = document.createElement(\"li\");\n        nutrition.innerHTML = 'Macro Nutrient Count: ';\n        item.appendChild(nutrition);\n\n        //creating a ul for macro nutrients\n        const macroUl = document.createElement(\"ul\");\n        nutrition.appendChild(macroUl);\n\n        //creating an li for protein\n        const protein = document.createElement(\"li\");\n        protein.innerHTML = `Protein: ${proteinQty} ${proteinUnit}`;\n        macroUl.appendChild(protein);\n\n        //creating an li for carbs\n        const carbs = document.createElement(\"li\");\n        carbs.innerHTML = `Carbs: ${carbsQty} ${carbsUnit}`;\n        macroUl.appendChild(carbs);\n\n        //creating an li for fat\n        const fat = document.createElement(\"li\");\n        fat.innerHTML = `Fat: ${fatQty} ${fatUnit}`;\n        macroUl.appendChild(fat);\n        results.appendChild(item);\n      }\n      ;\n    });\n  }\n}\n;\n/* harmony default export */ __webpack_exports__[\"default\"] = (RenderResult);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/renderResult.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lYXRlei1wcm9qZWN0Ly4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;