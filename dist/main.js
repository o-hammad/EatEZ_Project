/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _scripts_renderPage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./scripts/renderPage */ \"./src/scripts/renderPage.js\");\n/* harmony import */ var _scripts_renderResult__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scripts/renderResult */ \"./src/scripts/renderResult.js\");\n/* harmony import */ var _scripts_renderRecipe__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scripts/renderRecipe */ \"./src/scripts/renderRecipe.js\");\n\n\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const main = document.getElementById(\"main\");\n  new _scripts_renderPage__WEBPACK_IMPORTED_MODULE_0__[\"default\"](main);\n  const formFilterSubmission = document.getElementById(\"filterForm\");\n  formFilterSubmission.addEventListener(\"submit\", function (event) {\n    event.preventDefault();\n    const selectedCuisine = document.getElementById(\"cuisineTypeSelector\");\n    const selectedCalories = document.getElementById(\"caloriesSelector\");\n    const selectedProtein = document.getElementById(\"proteinSelector\");\n    const selectedCarbs = document.getElementById(\"carbsSelector\");\n    const selectedFat = document.getElementById(\"fatSelector\");\n    const inputtedFilters = {};\n    inputtedFilters[\"calories\"] = selectedCalories.value;\n    inputtedFilters[\"protein\"] = selectedProtein.value;\n    inputtedFilters[\"carbs\"] = selectedCarbs.value;\n    inputtedFilters[\"fat\"] = selectedFat.value;\n    if (!document.getElementById(\"results\") && !document.getElementById(\"recipe\")) {\n      new _scripts_renderResult__WEBPACK_IMPORTED_MODULE_1__[\"default\"](selectedCuisine.value, main, inputtedFilters);\n    } else {\n      if (document.getElementById(\"results\")) {\n        const currResults = document.getElementById(\"results\");\n        currResults.remove();\n      } else {\n        const currRecipe = document.getElementById(\"recipe\");\n        currRecipe.remove();\n      }\n      new _scripts_renderResult__WEBPACK_IMPORTED_MODULE_1__[\"default\"](selectedCuisine.value, main, inputtedFilters);\n    }\n    ;\n  });\n  document.addEventListener(\"click\", function (event) {\n    const target = event.target;\n    if (target.closest(\"#results\")) {\n      if (target.className === 'resultLabel') {\n        // console.log(target.id);\n        const currResults = document.getElementById(\"results\");\n        currResults.remove();\n        new _scripts_renderRecipe__WEBPACK_IMPORTED_MODULE_2__[\"default\"](target.id);\n      }\n    }\n    ;\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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XSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlbmRlclBhZ2UgZnJvbSBcIi4vc2NyaXB0cy9yZW5kZXJQYWdlXCI7XG5pbXBvcnQgUmVuZGVyUmVzdWx0IGZyb20gXCIuL3NjcmlwdHMvcmVuZGVyUmVzdWx0XCI7XG5pbXBvcnQgUmVuZGVyUmVjaXBlIGZyb20gXCIuL3NjcmlwdHMvcmVuZGVyUmVjaXBlXCI7XG5cbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsICgpID0+IHtcbiAgICBjb25zdCBtYWluID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJtYWluXCIpO1xuICAgIG5ldyBSZW5kZXJQYWdlKG1haW4pO1xuXG4gICAgY29uc3QgZm9ybUZpbHRlclN1Ym1pc3Npb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZpbHRlckZvcm1cIik7XG5cbiAgICBmb3JtRmlsdGVyU3VibWlzc2lvbi5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgICAgY29uc3Qgc2VsZWN0ZWRDdWlzaW5lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjdWlzaW5lVHlwZVNlbGVjdG9yXCIpO1xuICAgICAgICBjb25zdCBzZWxlY3RlZENhbG9yaWVzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjYWxvcmllc1NlbGVjdG9yXCIpO1xuICAgICAgICBjb25zdCBzZWxlY3RlZFByb3RlaW4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInByb3RlaW5TZWxlY3RvclwiKTtcbiAgICAgICAgY29uc3Qgc2VsZWN0ZWRDYXJicyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2FyYnNTZWxlY3RvclwiKTtcbiAgICAgICAgY29uc3Qgc2VsZWN0ZWRGYXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZhdFNlbGVjdG9yXCIpO1xuXG4gICAgICAgIGNvbnN0IGlucHV0dGVkRmlsdGVycyA9IHt9O1xuXG4gICAgICAgIGlucHV0dGVkRmlsdGVyc1tcImNhbG9yaWVzXCJdID0gc2VsZWN0ZWRDYWxvcmllcy52YWx1ZTtcbiAgICAgICAgaW5wdXR0ZWRGaWx0ZXJzW1wicHJvdGVpblwiXSA9IHNlbGVjdGVkUHJvdGVpbi52YWx1ZTtcbiAgICAgICAgaW5wdXR0ZWRGaWx0ZXJzW1wiY2FyYnNcIl0gPSBzZWxlY3RlZENhcmJzLnZhbHVlO1xuICAgICAgICBpbnB1dHRlZEZpbHRlcnNbXCJmYXRcIl0gPSBzZWxlY3RlZEZhdC52YWx1ZTtcblxuICAgICAgICBpZiAoIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicmVzdWx0c1wiKSAmJiAhZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyZWNpcGVcIikpIHtcbiAgICAgICAgICAgIG5ldyBSZW5kZXJSZXN1bHQoc2VsZWN0ZWRDdWlzaW5lLnZhbHVlLCBtYWluLCBpbnB1dHRlZEZpbHRlcnMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgaWYgKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicmVzdWx0c1wiKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGN1cnJSZXN1bHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyZXN1bHRzXCIpO1xuICAgICAgICAgICAgICAgIGN1cnJSZXN1bHRzLnJlbW92ZSgpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjdXJyUmVjaXBlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyZWNpcGVcIik7XG4gICAgICAgICAgICAgICAgY3VyclJlY2lwZS5yZW1vdmUoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG5ldyBSZW5kZXJSZXN1bHQoc2VsZWN0ZWRDdWlzaW5lLnZhbHVlLCBtYWluLCBpbnB1dHRlZEZpbHRlcnMpO1xuICAgICAgICB9O1xuICAgIH0pO1xuXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXQ7XG4gICAgICAgIGlmICh0YXJnZXQuY2xvc2VzdChcIiNyZXN1bHRzXCIpKSB7XG4gICAgICAgICAgICBpZiAodGFyZ2V0LmNsYXNzTmFtZSA9PT0gJ3Jlc3VsdExhYmVsJykge1xuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHRhcmdldC5pZCk7XG4gICAgICAgICAgICAgICAgY29uc3QgY3VyclJlc3VsdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJlc3VsdHNcIik7XG4gICAgICAgICAgICAgICAgY3VyclJlc3VsdHMucmVtb3ZlKCk7XG4gICAgICAgICAgICAgICAgbmV3IFJlbmRlclJlY2lwZSh0YXJnZXQuaWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH0pO1xufSk7XG4iXSwibmFtZXMiOlsiUmVuZGVyUGFnZSIsIlJlbmRlclJlc3VsdCIsIlJlbmRlclJlY2lwZSIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsIm1haW4iLCJnZXRFbGVtZW50QnlJZCIsImZvcm1GaWx0ZXJTdWJtaXNzaW9uIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsInNlbGVjdGVkQ3Vpc2luZSIsInNlbGVjdGVkQ2Fsb3JpZXMiLCJzZWxlY3RlZFByb3RlaW4iLCJzZWxlY3RlZENhcmJzIiwic2VsZWN0ZWRGYXQiLCJpbnB1dHRlZEZpbHRlcnMiLCJ2YWx1ZSIsImN1cnJSZXN1bHRzIiwicmVtb3ZlIiwiY3VyclJlY2lwZSIsInRhcmdldCIsImNsb3Nlc3QiLCJjbGFzc05hbWUiLCJpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/scripts/renderPage.js":
/*!***********************************!*\
  !*** ./src/scripts/renderPage.js ***!
  \***********************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass RenderPage {\n  constructor(ele) {\n    this.main = ele;\n    this.createHeader();\n    this.createSidebar(ele);\n    this.createFooter();\n  }\n  createHeader() {\n    const header = document.createElement(\"header\");\n    const logo = document.createElement(\"img\");\n    logo.src = \"src/assets/images/EatEZLogo.jpg\";\n    header.appendChild(logo);\n    document.body.prepend(header);\n  }\n  createFooter() {\n    const footer = document.createElement(\"footer\");\n    footer.innerHTML = \"<p>2023 All Rights Reserved</p>\";\n    document.body.appendChild(footer);\n  }\n  createSidebar(ele) {\n    //creation of sidebar container\n    const sidebar = document.createElement(\"div\");\n    sidebar.id = \"sidebar\";\n    ele.appendChild(sidebar);\n\n    //creation of paragraph description in sidebar\n    const welcomeMessage = document.createElement(\"h2\");\n    welcomeMessage.innerHTML = \"Welcome to EatEZ!\";\n    sidebar.appendChild(welcomeMessage);\n    const descriptionPara1 = document.createElement(\"p\");\n    descriptionPara1.textContent = \"Here at EatEZ, we want to take the guess work out of preparing your own, \" + \"healthy meals to satisfy your daily recommended macro-nutrient intake.\";\n    sidebar.appendChild(descriptionPara1);\n    descriptionPara1.style.marginBottom = \"10px\";\n    const descriptionPara2 = document.createElement(\"p\");\n    descriptionPara2.textContent = \"With most of our recipes taking 20 minutes or less to prepare, \" + \"which is faster than the wait time for take out, simply check our app for \" + \"recipe inspiration and grab the items at your local store.\";\n    sidebar.appendChild(descriptionPara2);\n    descriptionPara2.style.marginBottom = \"10px\";\n    const descriptionPara3 = document.createElement(\"p\");\n    descriptionPara3.textContent = \"To start, please use the below link to find your daily recommended macro-nutrient intake: \";\n    sidebar.appendChild(descriptionPara3);\n    descriptionPara3.style.marginBottom = \"5px\";\n    const macroLink = document.createElement(\"a\");\n    macroLink.href = \"https://healthyeater.com/flexible-dieting-calculator\";\n    macroLink.textContent = \"Calculate recommended calories and macros here\";\n    macroLink.target = \"_blank\";\n    sidebar.appendChild(macroLink);\n    macroLink.style.marginBottom = \"10px\";\n    const descriptionPara4 = document.createElement(\"p\");\n    descriptionPara4.textContent = \"Now that you have your total daily recommended calories and macronutrients, use the \" + \"below filters to find a meal for you!\";\n    sidebar.appendChild(descriptionPara4);\n    descriptionPara4.style.marginBottom = \"10px\";\n\n    //creation of a form to contain the filters\n    const form = document.createElement(\"form\");\n    form.id = \"filterForm\";\n    sidebar.appendChild(form);\n\n    //cuisine drop down in side nav\n    const cuisine = document.createElement(\"select\");\n    cuisine.id = \"cuisineTypeSelector\";\n\n    //creating the default cuising button\n    const pleaseSelectCuisine = document.createElement(\"option\");\n    pleaseSelectCuisine.value = \"\";\n    pleaseSelectCuisine.text = \"Please select a Cuisine\";\n    pleaseSelectCuisine.disabled = true;\n    pleaseSelectCuisine.selected = true;\n    cuisine.appendChild(pleaseSelectCuisine);\n\n    //adding the cuisines to the dropdown\n    let cuisines = ['American', 'Asian', 'British', 'Caribbean', 'Central Europe', 'Chinese', 'Eastern Europe', 'French', 'Greek', 'Indian', 'Italian', 'Japanese', 'Korean', 'Kosher', 'Mediterranean', 'Mexican', 'Middle Eastern', 'Nordic', 'South American', 'South East Asian', 'World'];\n    cuisines.forEach(typeOfCuisine => {\n      const lowerCaseCuisine = typeOfCuisine.toLowerCase();\n      const option = document.createElement(\"option\");\n      option.value = lowerCaseCuisine;\n      option.text = typeOfCuisine;\n      cuisine.appendChild(option);\n    });\n    form.appendChild(cuisine);\n    cuisine.style.marginBottom = \"10px\";\n\n    //creation of calories selector\n    const calories = document.createElement(\"select\");\n    calories.id = \"caloriesSelector\";\n\n    //creating the default calorie selector\n    const pleaseSelectCalories = document.createElement(\"option\");\n    pleaseSelectCalories.value = \"\";\n    pleaseSelectCalories.text = \"Please Select Max Calories Required\";\n    pleaseSelectCalories.disabled = true;\n    pleaseSelectCalories.selected = true;\n    calories.appendChild(pleaseSelectCalories);\n\n    //calories range\n    for (let i = 500; i <= 3000; i += 500) {\n      let option = document.createElement(\"option\");\n      option.value = `${i}`;\n      option.text = `${i} calories or less`;\n      calories.appendChild(option);\n    }\n    form.appendChild(calories);\n    calories.style.marginBottom = \"10px\";\n\n    //creation of total daily protein requirement\n    const protein = document.createElement(\"select\");\n    protein.id = \"proteinSelector\";\n    const pleaseSelectProtein = document.createElement(\"option\");\n    pleaseSelectProtein.value = \"\";\n    pleaseSelectProtein.text = \"Please Select Minimum Protein in Grams\";\n    pleaseSelectProtein.disabled = true;\n    pleaseSelectProtein.selected = true;\n    protein.appendChild(pleaseSelectProtein);\n    for (let i = 5; i <= 105; i += 10) {\n      let option = document.createElement(\"option\");\n      option.value = `${i}`;\n      option.text = `${i} grams or more`;\n      protein.appendChild(option);\n    }\n    ;\n    form.appendChild(protein);\n    protein.style.marginBottom = \"10px\";\n\n    //creation of total daily carb requirement\n    const carbs = document.createElement(\"select\");\n    carbs.id = \"carbsSelector\";\n    const pleaseSelectCarbs = document.createElement(\"option\");\n    pleaseSelectCarbs.value = \"\";\n    pleaseSelectCarbs.text = \"Please Select Minimum Carbs in Grams\";\n    pleaseSelectCarbs.disabled = true;\n    pleaseSelectCarbs.selected = true;\n    carbs.appendChild(pleaseSelectCarbs);\n    for (let i = 5; i <= 105; i += 10) {\n      let option = document.createElement(\"option\");\n      option.value = `${i}`;\n      option.text = `${i} grams or more`;\n      carbs.appendChild(option);\n    }\n    ;\n    form.appendChild(carbs);\n    carbs.style.marginBottom = \"10px\";\n\n    //creation of total daily fat requirement\n    const fat = document.createElement(\"select\");\n    fat.id = \"fatSelector\";\n    const pleaseSelectFat = document.createElement(\"option\");\n    pleaseSelectFat.value = \"\";\n    pleaseSelectFat.text = \"Please Select Minimum Fat in Grams\";\n    pleaseSelectFat.disabled = true;\n    pleaseSelectFat.selected = true;\n    fat.appendChild(pleaseSelectFat);\n    for (let i = 5; i <= 105; i += 10) {\n      let option = document.createElement(\"option\");\n      option.value = `${i}`;\n      option.text = `${i} grams or more`;\n      fat.appendChild(option);\n    }\n    ;\n    form.appendChild(fat);\n    fat.style.marginBottom = \"10px\";\n    const buttonContainer = document.createElement(\"div\");\n    buttonContainer.style.display = \"flex\";\n    form.appendChild(buttonContainer);\n    const searchButton = document.createElement(\"input\");\n    searchButton.type = \"submit\";\n    searchButton.value = \"Search\";\n    searchButton.style.marginRight = \"10px\";\n    buttonContainer.appendChild(searchButton);\n    buttonContainer.style.marginBottom = \"10px\";\n    const linksContainer = document.createElement(\"div\");\n    sidebar.appendChild(linksContainer);\n\n    //create a github link\n    const gitHubLink = document.createElement(\"a\");\n    linksContainer.appendChild(gitHubLink);\n    const gitHubIcon = document.createElement(\"img\");\n    gitHubIcon.src = \"src/assets/images/github-logo.png\";\n    gitHubLink.appendChild(gitHubIcon);\n    gitHubLink.href = \"https://github.com/o-hammad/EatEZ_Project.git\";\n    gitHubLink.target = \"_blank\";\n    gitHubIcon.id = \"gitHubIcon\";\n\n    //linkedin link\n    const linkedInLink = document.createElement(\"a\");\n    linksContainer.appendChild(linkedInLink);\n    const linkedInIcon = document.createElement(\"img\");\n    linkedInIcon.src = \"src/assets/images/linkedinicon.png\";\n    linkedInLink.appendChild(linkedInIcon);\n    linkedInLink.href = \"https://www.linkedin.com/in/omar-hammad-93810413b/\";\n    linkedInLink.target = \"_blank\";\n    linkedInIcon.id = \"linkedInIcon\";\n  }\n}\n;\n/* harmony default export */ __webpack_exports__[\"default\"] = (RenderPage);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/renderPage.js\n");

/***/ }),

/***/ "./src/scripts/renderRecipe.js":
/*!*************************************!*\
  !*** ./src/scripts/renderRecipe.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass RenderRecipe {\n  constructor(recipeLabel) {\n    let arrayRetrieval = localStorage.getItem('storedResult');\n    let hits = JSON.parse(arrayRetrieval);\n    this.renderData(hits, recipeLabel);\n  }\n  renderData(hits, recipeLabel) {\n    const recipeDisplay = document.createElement(\"div\");\n    recipeDisplay.id = \"recipe\";\n    main.appendChild(recipeDisplay);\n    hits.forEach(hit => {\n      //isolate the recipe for each hit\n      const recipe = hit.recipe;\n      const proteinQty = Math.floor(recipe.totalNutrients.PROCNT.quantity);\n      const proteinUnit = recipe.totalNutrients.PROCNT.unit;\n      const carbsQty = Math.floor(recipe.totalNutrients.CHOCDF.quantity);\n      const carbsUnit = recipe.totalNutrients.CHOCDF.unit;\n      const fatQty = Math.floor(recipe.totalNutrients.FAT.quantity);\n      const fatUnit = recipe.totalNutrients.FAT.unit;\n      if (recipe.label === recipeLabel) {\n        //create and image container\n        const recipeImages = document.createElement(\"div\");\n        recipeImages.id = \"recipeImages\";\n        recipeDisplay.appendChild(recipeImages);\n\n        //create a box for the right\n        const recipeImagesLeft = document.createElement(\"div\");\n        recipeImagesLeft.id = \"recipeImagesLeft\";\n        recipeImages.appendChild(recipeImagesLeft);\n\n        //add the label\n        const recipeLabelHeader = document.createElement(\"h2\");\n        recipeLabelHeader.innerHTML = `${recipe.label}`;\n        recipeImagesLeft.appendChild(recipeLabelHeader);\n\n        //render regular image\n        const image = document.createElement(\"img\");\n        image.src = `${recipe.images.REGULAR.url}`;\n        image.id = \"recipeImage\";\n        recipeImagesLeft.appendChild(image);\n\n        //create a container for the right side of recipe image\n        const recipeImagesRight = document.createElement(\"div\");\n        recipeImagesRight.id = \"recipeImagesRight\";\n        recipeImages.appendChild(recipeImagesRight);\n\n        //create a container for the ingredients and the nutrients\n        const ingredientNutrients = document.createElement(\"div\");\n        ingredientNutrients.id = \"recipeNutrientDisplay\";\n        recipeDisplay.appendChild(ingredientNutrients);\n\n        //create a container for the ingredients\n        const recipeIngredients = document.createElement(\"div\");\n        recipeIngredients.id = \"recipeIngredients\";\n        recipeImagesRight.appendChild(recipeIngredients);\n        recipeIngredients.style.backgroundImage = 'url(\"src/assets/images/clipboard-307332_1920.png\")';\n        recipeIngredients.style.backgroundSize = \"100% 100%\";\n\n        //create container for ingredients to fit inside clipboard\n        const recipeIngredientsText = document.createElement(\"div\");\n        recipeIngredientsText.id = \"recipeIngredientsText\";\n        recipeIngredients.appendChild(recipeIngredientsText);\n\n        //add a header for the ingredients\n        const ingredientsLabel = document.createElement(\"h3\");\n        ingredientsLabel.textContent = 'Ingredients:';\n        recipeIngredientsText.appendChild(ingredientsLabel);\n\n        //add the ingredients ul\n        const ingredientItems = document.createElement(\"ul\");\n        recipeIngredientsText.appendChild(ingredientItems);\n\n        //add each ingredient\n        recipe.ingredients.forEach(ingredient => {\n          const recipeItem = document.createElement(\"li\");\n          recipeItem.innerHTML = ingredient.text;\n          ingredientItems.appendChild(recipeItem);\n        });\n\n        //create a container for the nutrition facts\n        const nutritionFacts = document.createElement(\"div\");\n        nutritionFacts.id = \"nutritionFacts\";\n        ingredientNutrients.appendChild(nutritionFacts);\n        const nutritionLabel = document.createElement(\"h3\");\n        nutritionLabel.textContent = 'Nutrition Facts:';\n        nutritionFacts.appendChild(nutritionLabel);\n        for (const nutrientKey in recipe.totalNutrients) {\n          const nutrient = recipe.totalNutrients[nutrientKey];\n          const nutrientLine = document.createElement(\"div\");\n          nutrientLine.id = \"nutrientLine\";\n          nutrientLine.style.display = \"flex\";\n          nutrientLine.style.justifyContent = \"space-between\";\n          const nutrientLabel = document.createElement(\"div\");\n          nutrientLabel.textContent = `${nutrient.label}`;\n          nutrientLine.appendChild(nutrientLabel);\n          const nutritionQty = document.createElement(\"div\");\n          nutritionQty.textContent = `${Math.floor(nutrient.quantity)} ${nutrient.unit}`;\n          nutrientLine.appendChild(nutritionQty);\n          nutritionFacts.appendChild(nutrientLine);\n        }\n        const blankLine = document.createElement(\"div\");\n        blankLine.style.height = \"40px\";\n        nutritionFacts.appendChild(blankLine);\n\n        //creating a ul pie chart container\n        const pieChartContainerId = `pie-chart-container`;\n        const pieChartContainer = document.createElement(\"div\");\n        pieChartContainer.id = pieChartContainerId;\n        recipeImagesRight.appendChild(pieChartContainer);\n        const data = [{\n          nutrient: 'Protein',\n          value: proteinQty\n        }, {\n          nutrient: 'Fat',\n          value: fatQty\n        }, {\n          nutrient: 'Carbs',\n          value: carbsQty\n        }];\n        const width = 250;\n        const height = 250;\n        const radius = Math.min(width, height) / 2;\n        const innerRadius = 45;\n        const hoverArc = d3.arc().outerRadius(radius + 10).innerRadius(innerRadius);\n        const normalArc = d3.arc().outerRadius(radius).innerRadius(innerRadius);\n        const svg = d3.select(`#${pieChartContainerId}`).append('svg').attr('width', width).attr('height', height).append('g').attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')');\n        const pie = d3.pie().value(function (d) {\n          return d.value;\n        });\n        const arc = d3.arc().innerRadius(innerRadius).outerRadius(radius);\n        const toolTip = document.createElement(\"div\");\n        toolTip.style.display = \"none\";\n        toolTip.style.position = \"absolute\";\n        toolTip.id = \"toolTip\";\n        toolTip.style.cursor = \"none\";\n        toolTip.style.userSelect = \"none\";\n        main.appendChild(toolTip);\n\n        // var proteinArc, fatArc, carbsArc;\n\n        const arcs = svg.selectAll('arc').data(pie(data)).enter().append('g').on(\"mouseover\", function (d, i) {\n          d3.select(\"#toolTip\").style(\"display\", \"block\").style(\"left\", event.pageX + 2 + \"px\").style(\"top\", event.pageY + 2 + \"px\").text(i.value + \"g\");\n\n          // // test\n          // if (i.data.nutrient === 'Protein') {\n          //     proteinArc.transition()\n          //         .duration(1000)\n          //         .attr(\"innerRadius\", innerRadius)\n          //         .attr(\"outerRadius\", radius + 30);\n          // } else if (i.data.nutrient === 'Fat') {\n          //     fatArc.transition()\n          //         .duration(1000)\n          //         .attr(\"innerRadius\", innerRadius)\n          //         .attr(\"outerRadius\", radius + 30);\n          // } else if (i.data.nutrient === 'Carbs') {\n          //     carbsArc.transition()\n          //         .duration(1000)\n          //         .attr(\"innerRadius\", innerRadius)\n          //         .attr(\"outerRadius\", radius + 30);\n          // }\n        }).on(\"mouseout\", function (d, i) {\n          d3.select(\"#toolTip\").style(\"display\", \"none\");\n\n          // //test\n          // if (i.data.nutrient === 'Protein') {\n          //     proteinArc.transition()\n          //         .duration(200)\n          //         .attr(\"innerRadius\", innerRadius)\n          //         .attr(\"outerRadius\", radius);\n          // } else if (i.data.nutrient === 'Fat') {\n          //     fatArc.transition()\n          //         .duration(200)\n          //         .attr(\"innerRadius\", innerRadius)\n          //         .attr(\"outerRadius\", radius);\n          // } else if (i.data.nutrient === 'Carbs') {\n          //     carbsArc.transition()\n          //         .duration(200)\n          //         .attr(\"innerRadius\", innerRadius)\n          //         .attr(\"outerRadius\", radius);\n          // }\n        });\n\n        arcs.append('path').attr('d', arc).attr('fill', function (d) {\n          if (d.data.nutrient === 'Protein') {\n            return '#03fc6b';\n          } else if (d.data.nutrient === 'Fat') {\n            return '#fc3903';\n          } else {\n            return '#034afc';\n          }\n        }).on('mouseover', function (d) {\n          d3.select(this).transition().duration(500).attr('d', hoverArc);\n        }).on('mouseout', function (d) {\n          d3.select(this).transition().duration(500).attr('d', normalArc);\n        });\n        // // test\n        // .each(function (d) {\n        //     debugger\n        //     if (d.data.nutrient === 'Protein') {\n        //         proteinArc = d3.select(this);\n        //     } else if (d.data.nutrient === 'Fat') {\n        //         fatArc = d3.select(this);\n        //     } else if (d.data.nutrient === 'Carbs') {\n        //         carbsArc = d3.select(this);\n        //     }\n        // }); \n\n        arcs.append('text').attr('transform', function (d) {\n          return 'translate(' + arc.centroid(d) + ')';\n        }).attr('text-anchor', 'middle').text(function (d) {\n          return d.data.nutrient;\n        });\n      }\n      ;\n    });\n  }\n}\n;\n/* harmony default export */ __webpack_exports__[\"default\"] = (RenderRecipe);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/scripts/renderRecipe.js\n");

/***/ }),

/***/ "./src/scripts/renderResult.js":
/*!*************************************!*\
  !*** ./src/scripts/renderResult.js ***!
  \*************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\nclass RenderResult {\n  constructor(selectedOption, main, inputtedFilters) {\n    this.getData(selectedOption).then(data => {\n      const hits = data.hits;\n      localStorage.clear();\n      let storedResults = JSON.stringify(hits);\n      localStorage.setItem('storedResult', storedResults);\n      this.renderData(hits, main, inputtedFilters);\n    }).catch(error => {\n      alert(\"Please enter a cuisine\");\n      // console.log(\"Sorry, there was an error getting your data\");\n    });\n  }\n\n  async getData(selectedOption) {\n    let appId = \"25aad07a\";\n    let appKey = \"095c96548ed9957ef5de2298cd228fc4\";\n    let url = `https://api.edamam.com/api/recipes/v2?app_id=${appId}&app_key=${appKey}&cuisineType=${selectedOption}&type=public`;\n    const response = await fetch(url);\n    if (!response.ok) {\n      alert(\"Sorry, there was an error with the network\");\n      // throw new Error(\"Sorry, there was an error with the network\");\n    }\n\n    const data = await response.json();\n    return data;\n  }\n  renderData(hits, main, inputtedFilters) {\n    const results = document.createElement(\"div\");\n    results.id = \"results\";\n    main.appendChild(results);\n    if (inputtedFilters[\"calories\"] === '') {\n      inputtedFilters[\"calories\"] = 3000;\n    }\n    ;\n    if (inputtedFilters[\"protein\"] === '') {\n      inputtedFilters[\"protein\"] = 5;\n    }\n    ;\n    if (inputtedFilters[\"carbs\"] === '') {\n      inputtedFilters[\"carbs\"] = 5;\n    }\n    ;\n    if (inputtedFilters[\"fat\"] === '') {\n      inputtedFilters[\"fat\"] = 5;\n    }\n    ;\n    hits.forEach(hit => {\n      //isolate item\n      const recipe = hit.recipe;\n      const item = document.createElement(\"ul\");\n      item.id = \"item\";\n      const proteinQty = Math.floor(recipe.totalNutrients.PROCNT.quantity);\n      const proteinUnit = recipe.totalNutrients.PROCNT.unit;\n      const carbsQty = Math.floor(recipe.totalNutrients.CHOCDF.quantity);\n      const carbsUnit = recipe.totalNutrients.CHOCDF.unit;\n      const fatQty = Math.floor(recipe.totalNutrients.FAT.quantity);\n      const fatUnit = recipe.totalNutrients.FAT.unit;\n      if (recipe.calories <= inputtedFilters[\"calories\"] && proteinQty >= inputtedFilters[\"protein\"] && carbsQty >= inputtedFilters[\"carbs\"] && fatQty >= inputtedFilters[\"fat\"]) {\n        //render recipe label\n        const label = document.createElement(\"li\");\n        const labelHeader = document.createElement(\"h3\");\n        labelHeader.innerHTML = `${recipe.label}`;\n        labelHeader.style.cursor = \"pointer\";\n        labelHeader.className = 'resultLabel';\n        labelHeader.id = `${recipe.label}`;\n        label.appendChild(labelHeader);\n        item.appendChild(label);\n\n        //render small image\n        const image = document.createElement(\"img\");\n        image.src = `${recipe.images.SMALL.url}`;\n        item.appendChild(image);\n\n        //render calories for recipe\n        const calories = document.createElement(\"li\");\n        calories.innerHTML = `Calories: ${Math.floor(recipe.calories)}`;\n        item.appendChild(calories);\n\n        //creating an li for Nutrition Facts\n        const nutrition = document.createElement(\"li\");\n        nutrition.innerHTML = 'Macro Nutrient Count: ';\n        nutrition.id = \"macroLabel\";\n        item.appendChild(nutrition);\n\n        //creating a ul for macro nutrients\n        // const macroUl = document.createElement(\"ul\");\n        // nutrition.appendChild(macroUl);\n\n        //creating an li for protein\n        const protein = document.createElement(\"li\");\n        protein.innerHTML = `Protein: ${proteinQty} ${proteinUnit}`;\n        item.appendChild(protein);\n\n        //creating an li for carbs\n        const carbs = document.createElement(\"li\");\n        carbs.innerHTML = `Carbs: ${carbsQty} ${carbsUnit}`;\n        item.appendChild(carbs);\n\n        //creating an li for fat\n        const fat = document.createElement(\"li\");\n        fat.innerHTML = `Fat: ${fatQty} ${fatUnit}`;\n        item.appendChild(fat);\n        results.appendChild(item);\n      }\n      ;\n    });\n  }\n}\n;\n/* harmony default export */ __webpack_exports__[\"default\"] = (RenderResult);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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T04sTUFBTyxJQUFHRSxPQUFRLEVBQUM7UUFDM0NkLElBQUksQ0FBQ0osV0FBVyxDQUFDaUMsR0FBRyxDQUFDO1FBRXJCckMsT0FBTyxDQUFDSSxXQUFXLENBQUNJLElBQUksQ0FBQztNQUM3QjtNQUFDO0lBQ0wsQ0FBQyxDQUFDO0VBQ047QUFDSjtBQUFDO0FBRUQsK0RBQWVsQyxZQUFZIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZWF0ZXotcHJvamVjdC8uL3NyYy9zY3JpcHRzL3JlbmRlclJlc3VsdC5qcz8zN2FlIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFJlbmRlclJlc3VsdCB7XG4gICAgY29uc3RydWN0b3Ioc2VsZWN0ZWRPcHRpb24sIG1haW4sIGlucHV0dGVkRmlsdGVycykgeyAgICAgICAgXG4gICAgICAgIHRoaXMuZ2V0RGF0YShzZWxlY3RlZE9wdGlvbilcbiAgICAgICAgICAgIC50aGVuKGRhdGEgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IGhpdHMgPSBkYXRhLmhpdHM7XG4gICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLmNsZWFyKCk7XG4gICAgICAgICAgICAgICAgbGV0IHN0b3JlZFJlc3VsdHMgPSBKU09OLnN0cmluZ2lmeShoaXRzKTtcbiAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnc3RvcmVkUmVzdWx0Jywgc3RvcmVkUmVzdWx0cyk7XG4gICAgICAgICAgICAgICAgdGhpcy5yZW5kZXJEYXRhKGhpdHMsIG1haW4sIGlucHV0dGVkRmlsdGVycyk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICBhbGVydChcIlBsZWFzZSBlbnRlciBhIGN1aXNpbmVcIik7XG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJTb3JyeSwgdGhlcmUgd2FzIGFuIGVycm9yIGdldHRpbmcgeW91ciBkYXRhXCIpO1xuICAgICAgICAgICAgfSlcbiAgICB9O1xuXG4gICAgYXN5bmMgZ2V0RGF0YShzZWxlY3RlZE9wdGlvbikge1xuICAgICAgICBsZXQgYXBwSWQgPSBcIjI1YWFkMDdhXCI7XG4gICAgICAgIGxldCBhcHBLZXkgPSBcIjA5NWM5NjU0OGVkOTk1N2VmNWRlMjI5OGNkMjI4ZmM0XCI7XG4gICAgICAgIGxldCB1cmwgPSBgaHR0cHM6Ly9hcGkuZWRhbWFtLmNvbS9hcGkvcmVjaXBlcy92Mj9hcHBfaWQ9JHthcHBJZH0mYXBwX2tleT0ke2FwcEtleX0mY3Vpc2luZVR5cGU9JHtzZWxlY3RlZE9wdGlvbn0mdHlwZT1wdWJsaWNgXG5cbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCh1cmwpO1xuXG4gICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgICAgIGFsZXJ0KFwiU29ycnksIHRoZXJlIHdhcyBhbiBlcnJvciB3aXRoIHRoZSBuZXR3b3JrXCIpXG4gICAgICAgICAgICAvLyB0aHJvdyBuZXcgRXJyb3IoXCJTb3JyeSwgdGhlcmUgd2FzIGFuIGVycm9yIHdpdGggdGhlIG5ldHdvcmtcIik7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuXG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgIH07XG5cbiAgICByZW5kZXJEYXRhKGhpdHMsIG1haW4sIGlucHV0dGVkRmlsdGVycykge1xuICAgICAgICBjb25zdCByZXN1bHRzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgcmVzdWx0cy5pZCA9IFwicmVzdWx0c1wiO1xuICAgICAgICBtYWluLmFwcGVuZENoaWxkKHJlc3VsdHMpO1xuXG4gICAgICAgIGlmIChpbnB1dHRlZEZpbHRlcnNbXCJjYWxvcmllc1wiXSA9PT0gJycpIHtcbiAgICAgICAgICAgIGlucHV0dGVkRmlsdGVyc1tcImNhbG9yaWVzXCJdID0gMzAwMDtcbiAgICAgICAgfTtcblxuICAgICAgICBpZiAoaW5wdXR0ZWRGaWx0ZXJzW1wicHJvdGVpblwiXSA9PT0gJycpIHtcbiAgICAgICAgICAgIGlucHV0dGVkRmlsdGVyc1tcInByb3RlaW5cIl0gPSA1O1xuICAgICAgICB9O1xuXG4gICAgICAgIGlmIChpbnB1dHRlZEZpbHRlcnNbXCJjYXJic1wiXSA9PT0gJycpIHtcbiAgICAgICAgICAgIGlucHV0dGVkRmlsdGVyc1tcImNhcmJzXCJdID0gNTtcbiAgICAgICAgfTtcblxuICAgICAgICBpZiAoaW5wdXR0ZWRGaWx0ZXJzW1wiZmF0XCJdID09PSAnJykge1xuICAgICAgICAgICAgaW5wdXR0ZWRGaWx0ZXJzW1wiZmF0XCJdID0gNTtcbiAgICAgICAgfTtcblxuICAgICAgICBoaXRzLmZvckVhY2goaGl0ID0+IHtcbiAgICAgICAgICAgIC8vaXNvbGF0ZSBpdGVtXG4gICAgICAgICAgICBjb25zdCByZWNpcGUgPSBoaXQucmVjaXBlO1xuICAgICAgICAgICAgY29uc3QgaXRlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiKTtcbiAgICAgICAgICAgIGl0ZW0uaWQgPSBcIml0ZW1cIjtcbiAgICAgICAgICAgIGNvbnN0IHByb3RlaW5RdHkgPSBNYXRoLmZsb29yKHJlY2lwZS50b3RhbE51dHJpZW50cy5QUk9DTlQucXVhbnRpdHkpO1xuICAgICAgICAgICAgY29uc3QgcHJvdGVpblVuaXQgPSByZWNpcGUudG90YWxOdXRyaWVudHMuUFJPQ05ULnVuaXQ7XG4gICAgICAgICAgICBjb25zdCBjYXJic1F0eSA9IE1hdGguZmxvb3IocmVjaXBlLnRvdGFsTnV0cmllbnRzLkNIT0NERi5xdWFudGl0eSk7XG4gICAgICAgICAgICBjb25zdCBjYXJic1VuaXQgPSByZWNpcGUudG90YWxOdXRyaWVudHMuQ0hPQ0RGLnVuaXQ7XG4gICAgICAgICAgICBjb25zdCBmYXRRdHkgPSBNYXRoLmZsb29yKHJlY2lwZS50b3RhbE51dHJpZW50cy5GQVQucXVhbnRpdHkpO1xuICAgICAgICAgICAgY29uc3QgZmF0VW5pdCA9IHJlY2lwZS50b3RhbE51dHJpZW50cy5GQVQudW5pdDtcblxuXG4gICAgICAgICAgICBpZiAocmVjaXBlLmNhbG9yaWVzIDw9IGlucHV0dGVkRmlsdGVyc1tcImNhbG9yaWVzXCJdICYmIHByb3RlaW5RdHkgPj0gaW5wdXR0ZWRGaWx0ZXJzW1wicHJvdGVpblwiXSAmJiBcbiAgICAgICAgICAgICAgICBjYXJic1F0eSA+PSBpbnB1dHRlZEZpbHRlcnNbXCJjYXJic1wiXSAmJiBmYXRRdHkgPj0gaW5wdXR0ZWRGaWx0ZXJzW1wiZmF0XCJdKSB7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgLy9yZW5kZXIgcmVjaXBlIGxhYmVsXG4gICAgICAgICAgICAgICAgY29uc3QgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIik7XG4gICAgICAgICAgICAgICAgY29uc3QgbGFiZWxIZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDNcIik7XG4gICAgICAgICAgICAgICAgbGFiZWxIZWFkZXIuaW5uZXJIVE1MID0gYCR7cmVjaXBlLmxhYmVsfWA7XG4gICAgICAgICAgICAgICAgbGFiZWxIZWFkZXIuc3R5bGUuY3Vyc29yID0gXCJwb2ludGVyXCI7XG4gICAgICAgICAgICAgICAgbGFiZWxIZWFkZXIuY2xhc3NOYW1lID0gJ3Jlc3VsdExhYmVsJztcbiAgICAgICAgICAgICAgICBsYWJlbEhlYWRlci5pZCA9IGAke3JlY2lwZS5sYWJlbH1gO1xuICAgICAgICAgICAgICAgIGxhYmVsLmFwcGVuZENoaWxkKGxhYmVsSGVhZGVyKTtcbiAgICAgICAgICAgICAgICBpdGVtLmFwcGVuZENoaWxkKGxhYmVsKTtcblxuICAgICAgICAgICAgICAgIC8vcmVuZGVyIHNtYWxsIGltYWdlXG4gICAgICAgICAgICAgICAgY29uc3QgaW1hZ2UgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xuICAgICAgICAgICAgICAgIGltYWdlLnNyYyA9IGAke3JlY2lwZS5pbWFnZXMuU01BTEwudXJsfWA7XG4gICAgICAgICAgICAgICAgaXRlbS5hcHBlbmRDaGlsZChpbWFnZSk7XG5cbiAgICAgICAgICAgICAgICAvL3JlbmRlciBjYWxvcmllcyBmb3IgcmVjaXBlXG4gICAgICAgICAgICAgICAgY29uc3QgY2Fsb3JpZXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGlcIik7XG4gICAgICAgICAgICAgICAgY2Fsb3JpZXMuaW5uZXJIVE1MID0gYENhbG9yaWVzOiAke01hdGguZmxvb3IocmVjaXBlLmNhbG9yaWVzKX1gO1xuICAgICAgICAgICAgICAgIGl0ZW0uYXBwZW5kQ2hpbGQoY2Fsb3JpZXMpO1xuXG4gICAgICAgICAgICAgICAgLy9jcmVhdGluZyBhbiBsaSBmb3IgTnV0cml0aW9uIEZhY3RzXG4gICAgICAgICAgICAgICAgY29uc3QgbnV0cml0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpO1xuICAgICAgICAgICAgICAgIG51dHJpdGlvbi5pbm5lckhUTUwgPSAnTWFjcm8gTnV0cmllbnQgQ291bnQ6ICc7XG4gICAgICAgICAgICAgICAgbnV0cml0aW9uLmlkID0gXCJtYWNyb0xhYmVsXCI7XG4gICAgICAgICAgICAgICAgaXRlbS5hcHBlbmRDaGlsZChudXRyaXRpb24pO1xuXG4gICAgICAgICAgICAgICAgLy9jcmVhdGluZyBhIHVsIGZvciBtYWNybyBudXRyaWVudHNcbiAgICAgICAgICAgICAgICAvLyBjb25zdCBtYWNyb1VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInVsXCIpO1xuICAgICAgICAgICAgICAgIC8vIG51dHJpdGlvbi5hcHBlbmRDaGlsZChtYWNyb1VsKTtcblxuICAgICAgICAgICAgICAgIC8vY3JlYXRpbmcgYW4gbGkgZm9yIHByb3RlaW5cbiAgICAgICAgICAgICAgICBjb25zdCBwcm90ZWluID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpO1xuICAgICAgICAgICAgICAgIHByb3RlaW4uaW5uZXJIVE1MID0gYFByb3RlaW46ICR7cHJvdGVpblF0eX0gJHtwcm90ZWluVW5pdH1gO1xuICAgICAgICAgICAgICAgIGl0ZW0uYXBwZW5kQ2hpbGQocHJvdGVpbik7XG5cbiAgICAgICAgICAgICAgICAvL2NyZWF0aW5nIGFuIGxpIGZvciBjYXJic1xuICAgICAgICAgICAgICAgIGNvbnN0IGNhcmJzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpO1xuICAgICAgICAgICAgICAgIGNhcmJzLmlubmVySFRNTCA9IGBDYXJiczogJHtjYXJic1F0eX0gJHtjYXJic1VuaXR9YDtcbiAgICAgICAgICAgICAgICBpdGVtLmFwcGVuZENoaWxkKGNhcmJzKTtcblxuICAgICAgICAgICAgICAgIC8vY3JlYXRpbmcgYW4gbGkgZm9yIGZhdFxuICAgICAgICAgICAgICAgIGNvbnN0IGZhdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaVwiKTtcbiAgICAgICAgICAgICAgICBmYXQuaW5uZXJIVE1MID0gYEZhdDogJHtmYXRRdHl9ICR7ZmF0VW5pdH1gO1xuICAgICAgICAgICAgICAgIGl0ZW0uYXBwZW5kQ2hpbGQoZmF0KTtcblxuICAgICAgICAgICAgICAgIHJlc3VsdHMuYXBwZW5kQ2hpbGQoaXRlbSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUmVuZGVyUmVzdWx0OyJdLCJuYW1lcyI6WyJSZW5kZXJSZXN1bHQiLCJjb25zdHJ1Y3RvciIsInNlbGVjdGVkT3B0aW9uIiwibWFpbiIsImlucHV0dGVkRmlsdGVycyIsImdldERhdGEiLCJ0aGVuIiwiZGF0YSIsImhpdHMiLCJsb2NhbFN0b3JhZ2UiLCJjbGVhciIsInN0b3JlZFJlc3VsdHMiLCJKU09OIiwic3RyaW5naWZ5Iiwic2V0SXRlbSIsInJlbmRlckRhdGEiLCJjYXRjaCIsImVycm9yIiwiYWxlcnQiLCJhcHBJZCIsImFwcEtleSIsInVybCIsInJlc3BvbnNlIiwiZmV0Y2giLCJvayIsImpzb24iLCJyZXN1bHRzIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiaWQiLCJhcHBlbmRDaGlsZCIsImZvckVhY2giLCJoaXQiLCJyZWNpcGUiLCJpdGVtIiwicHJvdGVpblF0eSIsIk1hdGgiLCJmbG9vciIsInRvdGFsTnV0cmllbnRzIiwiUFJPQ05UIiwicXVhbnRpdHkiLCJwcm90ZWluVW5pdCIsInVuaXQiLCJjYXJic1F0eSIsIkNIT0NERiIsImNhcmJzVW5pdCIsImZhdFF0eSIsIkZBVCIsImZhdFVuaXQiLCJjYWxvcmllcyIsImxhYmVsIiwibGFiZWxIZWFkZXIiLCJpbm5lckhUTUwiLCJzdHlsZSIsImN1cnNvciIsImNsYXNzTmFtZSIsImltYWdlIiwic3JjIiwiaW1hZ2VzIiwiU01BTEwiLCJudXRyaXRpb24iLCJwcm90ZWluIiwiY2FyYnMiLCJmYXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/scripts/renderResult.js\n");

/***/ }),

/***/ "./src/index.scss":
/*!************************!*\
  !*** ./src/index.scss ***!
  \************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXguc2NzcyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9lYXRlei1wcm9qZWN0Ly4vc3JjL2luZGV4LnNjc3M/OTc0NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.scss\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_require__("./src/index.js");
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.scss");
/******/ 	
/******/ })()
;