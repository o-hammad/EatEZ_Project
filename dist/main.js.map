{"version":3,"file":"main.js","mappings":"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","sources":["webpack://eatez-project/./src/scripts/renderPage.js","webpack://eatez-project/./src/scripts/renderResult.js","webpack://eatez-project/./src/index.js"],"sourcesContent":["class RenderPage {\n    constructor(ele){\n        this.main = ele;\n        // this.ele.innerHTML = \"<h1>It's ALIVE!!</h1>\";\n        this.createHeader();\n        this.createSidebar(ele);\n        this.createFooter();\n\n        this.main.addEventListener('click', this.handleClick.bind(this));\n    };\n\n    handleClick() {\n        // this.ele.children[0].innerText = 'Ouch!';\n    }\n\n    createHeader() {\n        const header = document.createElement(\"header\");\n        const logo = document.createElement(\"img\");\n        logo.src = \"src/styles/EatEZLogo.jpg\";\n        header.appendChild(logo);\n        document.body.prepend(header);\n    }\n\n    createFooter() {\n        const footer = document.createElement(\"footer\");\n        footer.innerHTML = \"<p>2023 All Rights Reserved</p>\";\n        document.body.appendChild(footer);\n    }\n\n    createSidebar(ele) {\n        //creation of sidebar container\n        const sidebar = document.createElement(\"div\");\n        sidebar.id = \"sidebar\";\n        ele.appendChild(sidebar);\n\n        //creation of paragraph description in sidebar\n        const description = document.createElement(\"p\");\n        description.textContent = \"Paragraph Description\";\n        sidebar.appendChild(description);\n        \n        description.style.marginBottom = \"10px\";\n        \n        //creation of a form to contain the filters\n        const form = document.createElement(\"form\");\n        form.id = \"filterForm\"\n        sidebar.appendChild(form);\n\n        //cuisine drop down in side nav\n        const cuisine = document.createElement(\"select\");\n        cuisine.id = \"cuisineTypeSelector\";\n        \n        //creating the default cuising button\n        const pleaseSelectCuisine = document.createElement(\"option\");\n        pleaseSelectCuisine.value = \"\";\n        pleaseSelectCuisine.text = \"Please select a Cuisine\";\n        pleaseSelectCuisine.disabled = true;\n        pleaseSelectCuisine.selected = true;\n        cuisine.appendChild(pleaseSelectCuisine);\n\n        //adding the cuisines to the dropdown\n        let cuisines = ['American', 'Asian', 'British', 'Caribbean', 'Central Europe',\n            'Chinese', 'Eastern Europe', 'French', 'Greek', 'Indian', 'Italian', 'Japanese',\n            'Korean', 'Kosher', 'Mediterranean', 'Mexican', 'Middle Eastern', 'Nordic',\n            'South American', 'South East Asian', 'World'];\n        \n        cuisines.forEach(typeOfCuisine => {\n            const lowerCaseCuisine = typeOfCuisine.toLowerCase();\n            const option = document.createElement(\"option\");\n            option.value = lowerCaseCuisine;\n            option.text = typeOfCuisine;\n            cuisine.appendChild(option);\n        })\n\n        form.appendChild(cuisine);\n        cuisine.style.marginBottom = \"10px\";\n\n        //creation of calories selector\n        const calories = document.createElement(\"select\");\n        calories.id = \"caloriesSelector\";\n\n        //creating the default calorie selector\n        const pleaseSelectCalories = document.createElement(\"option\");\n        pleaseSelectCalories.value = \"\";\n        pleaseSelectCalories.text = \"Please Select Max Calories Required\";\n        pleaseSelectCalories.disabled = true;\n        pleaseSelectCalories.selected = true;\n        calories.appendChild(pleaseSelectCalories);\n        \n        //calories range\n        for(let i = 500; i <= 3000; i += 500) {\n            let option = document.createElement(\"option\");\n            option.value = `${i}`;\n            option.text = `${i} calories or less`;\n            calories.appendChild(option);\n        }\n        \n        form.appendChild(calories);\n        calories.style.marginBottom = \"10px\";\n\n        //creation of total daily protein requirement\n        const protein = document.createElement(\"select\");\n        protein.id = \"proteinSelector\";\n\n        const pleaseSelectProtein = document.createElement(\"option\");\n        pleaseSelectProtein.value = \"\";\n        pleaseSelectProtein.text = \"Please Select Minimum Protein in Grams\";\n        pleaseSelectProtein.disabled = true;\n        pleaseSelectProtein.selected = true;\n        protein.appendChild(pleaseSelectProtein);\n\n        for (let i = 5; i <= 105; i += 10) {\n            let option = document.createElement(\"option\");\n            option.value = `${i}`;\n            option.text = `${i} grams or more`;\n            protein.appendChild(option);\n        };\n\n        form.appendChild(protein);\n        protein.style.marginBottom = \"10px\";\n\n        //creation of total daily carb requirement\n        const carbs = document.createElement(\"select\");\n        carbs.id = \"carbsSelector\";\n\n        const pleaseSelectCarbs = document.createElement(\"option\");\n        pleaseSelectCarbs.value = \"\";\n        pleaseSelectCarbs.text = \"Please Select Minimum Carbs in Grams\";\n        pleaseSelectCarbs.disabled = true;\n        pleaseSelectCarbs.selected = true;\n        carbs.appendChild(pleaseSelectCarbs);\n\n        for (let i = 5; i <= 105; i += 10) {\n            let option = document.createElement(\"option\");\n            option.value = `${i}`;\n            option.text = `${i} grams or more`;\n            carbs.appendChild(option);\n        };\n\n        form.appendChild(carbs);\n\n        carbs.style.marginBottom = \"10px\";\n\n        //creation of total daily fat requirement\n        const fat = document.createElement(\"select\");\n        fat.id = \"fatSelector\";\n\n        const pleaseSelectFat = document.createElement(\"option\");\n        pleaseSelectFat.value = \"\";\n        pleaseSelectFat.text = \"Please Select Minimum Fat in Grams\";\n        pleaseSelectFat.disabled = true;\n        pleaseSelectFat.selected = true;\n        fat.appendChild(pleaseSelectFat);\n\n        for (let i = 5; i <= 105; i += 10) {\n            let option = document.createElement(\"option\");\n            option.value = `${i}`;\n            option.text = `${i} grams or more`;\n            fat.appendChild(option);\n        };\n\n        form.appendChild(fat);\n        fat.style.marginBottom = \"10px\";\n\n        const searchButton = document.createElement(\"input\");\n        searchButton.type = \"submit\";\n        searchButton.value = \"Search\";\n        form.appendChild(searchButton);\n    };\n};\n\nexport default RenderPage;","import PieGraph from \"./pieGraph\";\n\nclass RenderResult {\n    constructor(selectedOption, main, inputtedFilters) {\n        let currentData;\n        \n        this.getData(selectedOption)\n            .then(data => {\n                console.log(data);\n                currentData = data;\n                const hits = data.hits;\n                this.renderData(hits, main, inputtedFilters);\n            })\n            .catch(error => {\n                console.log(\"Sorry, there was an error getting your data\");\n            })\n        \n        this.cuisineSelectedData = currentData;\n    };\n\n    async getData(selectedOption) {\n        let appId = \"25aad07a\";\n        let appKey = \"095c96548ed9957ef5de2298cd228fc4\";\n        let url = `https://api.edamam.com/api/recipes/v2?app_id=${appId}&app_key=${appKey}&cuisineType=${selectedOption}&type=public`\n\n        const response = await fetch(url);\n\n        if (!response.ok) {\n            throw new Error(\"Sorry, there was an error with the network\");\n        }\n\n        const data = await response.json();\n\n        return data;\n    };\n\n    renderData(hits, main, inputtedFilters) {\n        const results = document.createElement(\"div\");\n        results.id = \"results\";\n        main.appendChild(results);\n\n        if (inputtedFilters[\"calories\"] === '') {\n            inputtedFilters[\"calories\"] = 500;\n        };\n\n        if (inputtedFilters[\"protein\"] === '') {\n            inputtedFilters[\"protein\"] = 5;\n        };\n\n        if (inputtedFilters[\"carbs\"] === '') {\n            inputtedFilters[\"carbs\"] = 5;\n        };\n\n        if (inputtedFilters[\"fat\"] === '') {\n            inputtedFilters[\"fat\"] = 5;\n        };\n\n        hits.forEach(hit => {\n            //isolate item\n            const recipe = hit.recipe;\n            const item = document.createElement(\"ul\");\n            item.id = \"item\";\n            const proteinQty = Math.floor(recipe.totalNutrients.PROCNT.quantity);\n            const proteinUnit = recipe.totalNutrients.PROCNT.unit;\n            const carbsQty = Math.floor(recipe.totalNutrients.CHOCDF.quantity);\n            const carbsUnit = recipe.totalNutrients.CHOCDF.unit;\n            const fatQty = Math.floor(recipe.totalNutrients.FAT.quantity);\n            const fatUnit = recipe.totalNutrients.FAT.unit;\n\n\n            if (recipe.calories <= inputtedFilters[\"calories\"] && proteinQty >= inputtedFilters[\"protein\"] && \n                carbsQty >= inputtedFilters[\"carbs\"] && fatQty >= inputtedFilters[\"fat\"]) {\n                \n                //render recipe label\n                const label = document.createElement(\"li\");\n                label.innerHTML = `${recipe.label}`;\n                item.appendChild(label);\n\n                //render small image\n                const image = document.createElement(\"img\");\n                image.src = `${recipe.images.SMALL.url}`;\n                item.appendChild(image);\n\n                //render calories for recipe\n                const calories = document.createElement(\"li\");\n                calories.innerHTML = `Calories: ${Math.floor(recipe.calories)}`;\n                item.appendChild(calories);\n\n                //creating an li for Nutrition Facts\n                const nutrition = document.createElement(\"li\");\n                nutrition.innerHTML = 'Macro Nutrient Count: ';\n                item.appendChild(nutrition);\n\n                //creating a ul for macro nutrients\n                const macroUl = document.createElement(\"ul\");\n                nutrition.appendChild(macroUl);\n\n                //creating an li for protein\n                const protein = document.createElement(\"li\");\n                protein.innerHTML = `Protein: ${proteinQty} ${proteinUnit}`;\n                macroUl.appendChild(protein);\n\n                //creating an li for carbs\n                const carbs = document.createElement(\"li\");\n                carbs.innerHTML = `Carbs: ${carbsQty} ${carbsUnit}`;\n                macroUl.appendChild(carbs);\n\n                //creating an li for fat\n                const fat = document.createElement(\"li\");\n                fat.innerHTML = `Fat: ${fatQty} ${fatUnit}`;\n                macroUl.appendChild(fat);\n\n                results.appendChild(item);\n            };\n        });\n    };\n};\n\nexport default RenderResult;","import RenderPage from \"./scripts/renderPage\";\nimport RenderResult from \"./scripts/renderResult\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const main = document.getElementById(\"main\");\n    new RenderPage(main);\n\n    const formFilterSubmission = document.getElementById(\"filterForm\")\n\n    formFilterSubmission.addEventListener(\"submit\", function(event) {\n        event.preventDefault();\n\n        const selectedCuisine = document.getElementById(\"cuisineTypeSelector\");\n        const selectedCalories = document.getElementById(\"caloriesSelector\");\n        const selectedProtein = document.getElementById(\"proteinSelector\");\n        const selectedCarbs = document.getElementById(\"carbsSelector\");\n        const selectedFat = document.getElementById(\"fatSelector\");\n\n        const inputtedFilters = {};\n\n        inputtedFilters[\"calories\"] = selectedCalories.value;\n        inputtedFilters[\"protein\"] = selectedProtein.value;\n        inputtedFilters[\"carbs\"] = selectedCarbs.value;\n        inputtedFilters[\"fat\"] = selectedFat.value;\n\n        if (!document.getElementById(\"results\")) {\n            new RenderResult(selectedCuisine.value, main, inputtedFilters);\n        } else {\n            const currResults = document.getElementById(\"results\");\n            currResults.remove();\n            new RenderResult(selectedCuisine.value, main, inputtedFilters);\n        };\n    });\n});\n"],"names":["constructor","ele","this","main","createHeader","createSidebar","createFooter","addEventListener","handleClick","bind","header","document","createElement","logo","src","appendChild","body","prepend","footer","innerHTML","sidebar","id","description","textContent","style","marginBottom","form","cuisine","pleaseSelectCuisine","value","text","disabled","selected","forEach","typeOfCuisine","lowerCaseCuisine","toLowerCase","option","calories","pleaseSelectCalories","i","protein","pleaseSelectProtein","carbs","pleaseSelectCarbs","fat","pleaseSelectFat","searchButton","type","selectedOption","inputtedFilters","currentData","getData","then","data","console","log","hits","renderData","catch","error","cuisineSelectedData","url","response","fetch","ok","Error","json","results","hit","recipe","item","proteinQty","Math","floor","totalNutrients","PROCNT","quantity","proteinUnit","unit","carbsQty","CHOCDF","carbsUnit","fatQty","FAT","fatUnit","label","image","images","SMALL","nutrition","macroUl","getElementById","RenderPage","event","preventDefault","selectedCuisine","selectedCalories","selectedProtein","selectedCarbs","selectedFat","remove","RenderResult"],"sourceRoot":""}